# Maintainer: aur.chaotic.cx

_pkgname="eden"
pkgname="$_pkgname-git"
pkgver=0.0.2.r272.g9634342
pkgrel=1
pkgdesc="Yet another emulator fork"
url="https://git.eden-emu.dev/eden-emu/eden"
license=('GPL-3.0-or-later')
arch=('x86_64')

depends=(
  'libfmt.so'
  'qt6-multimedia'
  'qt6-webengine'
)
makedepends=(
  'boost'
  'cmake'
  'git'
  'glslang'
  'nasm'
  'ninja'
  'nlohmann-json'
  'qt6-tools'
  'vulkan-headers'
  'vulkan-utility-libraries'
)

provides=("$_pkgname")
conflicts=("$_pkgname")

options=('!emptydirs')

_pkgsrc="$_pkgname"
source=("$_pkgsrc"::"git+$url.git")
sha256sums=('SKIP')

pkgver() {
  cd "$_pkgsrc"
  local _tmp _tag _version _revision _hash
  _tmp=$(git tag -l '[0-9]*' | sed -E 's&([^0-9]*)([0-9\.]+)(\S*)$&\2 \1\2\3&' | sort -rV | head -1)
  _version=$(cut -f1 -d' ' <<< ${_tmp:?})
  _tag=$(cut -f2 -d' ' <<< ${_tmp:?})
  _revision=$(git rev-list --count --cherry-pick "$_tag"...HEAD)
  _commit=$(git rev-parse --short=7 HEAD)
  printf '%s.r%s.g%s' "${_version:?}" "${_revision:?}" "${_commit:?}"
}

build() (
  export CFLAGS+=' -DNDEBUG'
  export CXXFLAGS+=' -DNDEBUG'

  local _cmake_options=(
    -S "$_pkgsrc"
    -B build
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX="/usr"

    -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON
    -DENABLE_QT_TRANSLATION=OFF # spurious errors
    -DENABLE_WEB_SERVICE=ON
    -DTITLE_BAR_FORMAT_IDLE="$_pkgname | ${pkgver} {}"
    -DTITLE_BAR_FORMAT_RUNNING="$_pkgname | ${pkgver} {}"
    -DUSE_DISCORD_PRESENCE=OFF
    -DYUZU_CHECK_SUBMODULES=OFF
    -DYUZU_CRASH_DUMPS=OFF
    -DYUZU_DOWNLOAD_TIME_ZONE_DATA=ON
    -DYUZU_ENABLE_COMPATIBILITY_REPORTING=OFF
    -DYUZU_ENABLE_LTO=OFF
    -DYUZU_ROOM=ON
    -DYUZU_USE_BUNDLED_FFMPEG=OFF
    -DYUZU_USE_BUNDLED_QT=OFF
    -DYUZU_USE_BUNDLED_SDL2=OFF
    -DYUZU_USE_BUNDLED_VCPKG=OFF
    -DYUZU_USE_EXTERNAL_SDL2=OFF
    -DYUZU_USE_EXTERNAL_VULKAN_HEADERS=OFF
    -DYUZU_USE_EXTERNAL_VULKAN_SPIRV_TOOLS=OFF
    -DYUZU_USE_EXTERNAL_VULKAN_UTILITY_LIBRARIES=OFF
    -DYUZU_USE_QT_MULTIMEDIA=ON
    -DYUZU_USE_QT_WEB_ENGINE=ON

    -DUSE_SANITIZERS=OFF # cubeb
    -DDYNARMIC_TESTS=OFF
    -DYUZU_TESTS=OFF
    -Wno-dev
  )

  cmake "${_cmake_options[@]}"
  cmake --build build
)

package() {
  DESTDIR="$pkgdir" cmake --install build

  # unwanted
  rm -rf "$pkgdir/usr/include"
  rm -rf "$pkgdir/usr/lib/cmake"
  rm -rf "$pkgdir/usr/lib"/*.a
}
