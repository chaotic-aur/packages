export CMAKE_POLICY_VERSION_MINIMUM=3.5

unset -f check

url="https://github.com/FreeCAD/FreeCAD"

license=('LGPL-2.1-or-later')

depends+=(
  'hdf5'
  'libspnav'
)

makedepends+=(
  'fast_float'
  'pybind11'
)

_optdepends=("${optdepends[@]//*libspnav:*/}")
unset optdepends

for i in "${_optdepends[@]}"; do
  if [ -n "$i" ]; then
    optdepends+=("$i")
  fi
done

provides=('freecad')
conflicts=('freecad')

_pkgsrc="FreeCAD"

eval _orig_"$(declare -f prepare)"
prepare() {
  (_orig_prepare)

  # remove cmake version check
  sed -E -e '/FATAL_ERROR/d' \
    -e '1i cmake_minimum_required(VERSION 4.0)' \
    -i "$_pkgsrc/CMakeLists.txt"
}

pkgver() {
  cd "$_pkgsrc"
  local _tag _version _revision _hash
  _tag=$(git tag | grep -Ev '[A-Za-z]{2}' | sort -rV | head -1)
  _version="${_tag:?}"
  _revision=$(git rev-list --count --cherry-pick "$_tag"...HEAD)
  _hash=$(git rev-parse --short=7 HEAD)
  printf '%s.r%s.g%s' "${_version:?}" "${_revision:?}" "${_hash:?}"
}

build() {
  local _cmake_options=(
    -B build
    -S "$_pkgsrc"
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX=/usr/lib/freecad
    -DCMAKE_INSTALL_DATADIR=/usr/share/freecad
    -DCMAKE_INSTALL_DATAROOTDIR=/usr/share
    -DCMAKE_INSTALL_DOCDIR=/usr/share/freecad/doc
    -DBUILD_DESIGNER_PLUGIN=ON
    -DBUILD_FLAT_MESH=ON
    -DFREECAD_QT_VERSION=6
    -DFREECAD_USE_EXTERNAL_PIVY=ON
    -DFREECAD_USE_PCL=OFF
    -DFREECAD_USE_QT_FILEDIALOG=ON
    -DINSTALL_TO_SITEPACKAGES=ON
    -DENABLE_DEVELOPER_TESTS=OFF
    -DBUILD_TESTING=OFF
    -Wno-dev
  )

  cmake "${_cmake_options[@]}"
  cmake --build build
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  # tools
  install -Dm755 FreeCAD/src/Tools/fcinfo -t "$pkgdir/usr/bin/"

  # symlinks
  install -d "$pkgdir/usr/bin"
  ln -sf /usr/lib/freecad/bin/FreeCAD "$pkgdir/usr/bin/freecad"
  ln -sf /usr/lib/freecad/bin/FreeCAD "$pkgdir/usr/bin/FreeCAD"
  ln -sf /usr/lib/freecad/bin/FreeCADCmd "$pkgdir/usr/bin/freecadcmd"
  ln -sf /usr/lib/freecad/bin/FreeCADCmd "$pkgdir/usr/bin/FreeCADCmd"
}
