# Maintainer: aur.chaotic.cx

## options
: ${_use_clang:=false}

: ${_build_level:=1}
: ${_build_git:=true}

unset _pkgtype
[[ "${_build_level::1}" == "2" ]] && _pkgtype+="-x64v2"
[[ "${_build_level::1}" == "3" ]] && _pkgtype+="-x64v3"
[[ "${_build_level::1}" == "4" ]] && _pkgtype+="-x64v4"
[[ "${_build_git::1}" == "t" ]] && _pkgtype+="-git"

_pkgname="shadps4-azahar"
pkgname="$_pkgname${_pkgtype:-}"
pkgver=0.8.0a.r61.g1f9da3d
pkgrel=1
pkgdesc="PlayStation 4 emulator"
url="https://github.com/AzaharPlus/shadPS4Plus"
license=('GPL-2.0-or-later')
arch=('x86_64' 'x86_64_v2' 'x86_64_v3' 'x86_64_v4')

depends=(
  'crypto++'
  'glslang'
  'libavcodec.so'  # ffmpeg
  'libavformat.so' # ffmpeg
  'libavutil.so'   # ffmpeg
  'libfmt.so'
  'libpng16.so'      # libpng
  'libswresample.so' # ffmpeg
  'libswscale.so'    # ffmpeg
  'libusb-1.0.so'    # libusb
  'libxxhash.so'     # xxhash
  'libz.so'          # zlib
  'pugixml'
  'qt6-multimedia'
  'sdl3'
)
makedepends=(
  'boost'
  'clang'
  'cmake'
  'git'
  'half'
  'lld'
  'ninja'
  'qt6-tools'
  'rapidjson'
  'robin-map'
  'spirv-headers'
  'stb'
  'toml11'
)

provides=("$_pkgname")
conflicts=("$_pkgname")

_pkgsrc="$_pkgname"
source=("$_pkgsrc"::"git+$url.git")
sha256sums=('SKIP')

prepare() {
  cd "$_pkgsrc"

  git rm -r externals/MoltenVK/MoltenVK
  git rm -r externals/MoltenVK/SPIRV-Cross
  git rm -r externals/MoltenVK/cereal
  git rm -r externals/cryptopp
  git rm -r externals/cryptopp-cmake
  git rm -r externals/date
  git rm -r externals/ext-boost
  git rm -r externals/ffmpeg-core
  git rm -r externals/fmt
  git rm -r externals/glslang
  git rm -r externals/half
  git rm -r externals/libpng
  git rm -r externals/pugixml
  git rm -r externals/robin-map
  git rm -r externals/sdl3
  git rm -r externals/toml11
  git rm -r externals/winpthreads
  git rm -r externals/xxhash
  git rm -r externals/zlib-ng

  git submodule update --init --recursive --depth 1

  # set version info
  local _tag _version
  _tag=$(git tag -l 'SHAD_PS4_PLUS_[0-9]*' | sort -rV | head -1)
  _version=$(
    sed -E -e 's&^SHAD_PS4_PLUS_&&' \
      -e 'y/A-Z/a-z/' \
      -e 's/_([a-z])/\1/' \
      -e 's/_/./g' \
      <<< "${_tag:?}"
  )

  sed -E -e '/march/d' -i CMakeLists.txt

  git tag -f "$_version" "$_tag"

  local _pkgver=$(cd "$srcdir" && pkgver)

  sed -E -e 's&@APP_VERSION@&'"${_pkgver:?}&" \
    -e 's&@APP_IS_RELEASE@&true&' \
    -i src/common/scm_rev.cpp.in

  sed -E -e 's&(fmt::format)\("shadPS4 v&\1("shadPS4 Azahar &' \
    -i src/emulator.cpp src/qt_gui/main_window.cpp
}

pkgver() {
  cd "$_pkgsrc"
  git describe --long --tags --abbrev=7 --exclude='*[a-zA-Z][a-zA-Z]*' \
    | sed -E 's/^[^0-9]*//;s/([^-]*-g)/r\1/;s/-/./g'
}

build() (
  export CMAKE_POLICY_VERSION_MINIMUM=3.5

  if [[ "${_use_clang::1}" == "t" ]]; then
    export CC CXX LDFLAGS
    CC=clang
    CXX=clang++

    local _ldflags=(${LDFLAGS})
    LDFLAGS="${_ldflags[@]//*fuse-ld*/} -fuse-ld=lld"
  fi

  if [[ ${_build_level::1} =~ ^[2-4]$ ]]; then
    export CFLAGS CXXFLAGS
    local _cflags _cxxflags
    _cflags=(
      -march=x86-64-v${_build_level::1} -O3
      $(sed -E -e 's&-(march|mtune)=\S+\b&&g' -e 's&-O[0-9]+\b&&g' <<< "${CFLAGS}")
    )
    CFLAGS="${_cflags[@]}"

    _cxxflags=(
      -march=x86-64-v${_build_level::1} -O3
      $(sed -E -e 's&-(march|mtune)=\S+\b&&g' -e 's&-O[0-9]+\b&&g' <<< "${CXXFLAGS}")
    )
    CXXFLAGS="${_cxxflags[@]}"
  fi

  local _cmake_options=(
    -S "$_pkgsrc"
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX='/usr'
    -DCMAKE_SKIP_RPATH=ON
    -DENABLE_UPDATER=OFF
    -DSIRIT_USE_SYSTEM_SPIRV_HEADERS=ON
    -DBUILD_TESTING=OFF
    -Wno-dev
  )

  local _cmake_sdl=(
    -B build_sdl
    -DENABLE_QT_GUI=OFF
    "${_cmake_options[@]}"
  )

  cmake "${_cmake_sdl[@]}"
  cmake --build build_sdl

  local _cmake_qt=(
    -B build_qt
    -DENABLE_QT_GUI=ON
    "${_cmake_options[@]}"
  )

  cmake "${_cmake_qt[@]}"
  cmake --build build_qt
)

package() {
  # DESTDIR="$pkgdir" cmake --install build

  install -Dm755 build_sdl/shadps4 "$pkgdir/usr/bin/${_pkgname}-sdl"

  install -Dm755 build_qt/shadps4 "$pkgdir/usr/bin/$_pkgname"

  install -Dm644 "$_pkgsrc/src/images/shadps4.svg" "$pkgdir/usr/share/pixmaps/$_pkgname.svg"

  install -Dm644 /dev/stdin "$pkgdir/usr/share/applications/$_pkgname.desktop" << END
[Desktop Entry]
Type=Application
Name=shadPS4 Azahar
Comment=$pkgdesc
Exec=$_pkgname
Icon=$_pkgname
Terminal=false
Categories=Game;Emulator;
StartupWMClass=shadps4;
END
}
