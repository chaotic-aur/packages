###############################################################################
# Generated by arch-phpbs: https://github.com/lamskoy/arch-phpbs
#
# Maintaining/co-maintaining on AUR: all packages from php53 up to php82
#
# Thanks to:
#
# AUR php80 Co-maintainer: Timo Sarawinski
# AUR php70 and php71 Co-maintainer: William Gathoye <william@gathoye.be>
# AUR php74 Co-maintainer: Tomasz Gruszka <tompear79@gmail.com>
# AUR php73 Co-maintainer: Matt Harrison <matt@harrison.us.com>
# AUR php73 and php56 Contributor: Pierre Schmitz <pierre@archlinux.de>
# AUR php56 Contributor:  Chris Severance aur.severach aATt spamgourmet dott com
# AUR php56 Contributor:  Thore Bödecker <me@foxxx0.de>
# AUR php56 Contributor:  Jörg Schuck <joerg_schuck [at] web.de>
# AUR php55 Contributor: Raphaël Doursenaud <rdoursenaud@gmail.com>
# AUR php53 Contriburor: Felix Yan <felixonmars@archlinux.org>
###############################################################################
_phpbase="73"
_suffix=""
pkgver="7.3.33"
pkgrel="14"
pkgbase="php73"
pkgdesc="PHP 7.3.33 compiled as to not conflict with mainline php"
_cppflags=" -DU_USING_ICU_NAMESPACE=1  -DU_DEFINE_FALSE_AND_TRUE=1 "
_build_apache_cfg="etc/httpd/conf/extra"
_build_bundled_gd="0"
_build_conf_d="etc/php73/conf.d"
_build_forced_openssl_11="1"
_build_fpm_name="php-fpm73"
_build_fpm_service_name="php73-fpm"
_build_icu_src_dir="icu/source"
_build_ini_per_sapi="0"
_build_mysql_socket="/run/mysqld/mysqld.sock"
_build_openssl_v10_patch="0"
_build_openssl_v11_patch="0"
_build_per_sapi="0"
_build_phpdbg="1"
_build_sapi_ini_apache="etc/php73"
_build_sapi_ini_cgi="etc/php73"
_build_sapi_ini_cli="etc/php73"
_build_sapi_ini_embed="etc/php73"
_build_sapi_ini_fpm="etc/php73"
_build_sapi_ini_litespeed="etc/php73"
_build_sapi_ini_phpdbg="etc/php73"
_build_sapi_litespeed="--with-litespeed"
_build_shared_gd="1"
_build_shared_json="1"
_build_shared_libedit="0"
_build_shared_mysqlnd="1"
_build_shared_openssl="0"
_build_shared_pdo="1"
_build_system_timezonedb="1"
_build_update_sqlite="0"
_build_uses_argon="1"
_build_uses_lmdb="1"
_build_with_custom_icu="0"
_pkgver_icu="64-1"
_priority_default="20"
_priority_dom="16"
_priority_json="15"
_priority_mysqlnd="10"
_priority_opcache="10"
_priority_openssl="05"
_priority_pdo="10"
_priority_xml="15"
_suffix=""
_suffix_so="7"
pkgname=(
  "php73"
  "php73-cli"
  "php73-cgi"
  "php73-fpm"
  "php73-embed"
  "php73-apache"
  "php73-litespeed"
  "php73-phpdbg"
  "php73-xml"
  "php73-xsl"
  "php73-xmlreader"
  "php73-xmlwriter"
  "php73-wddx"
  "php73-dom"
  "php73-simplexml"
  "php73-pdo"
  "php73-mysql"
  "php73-phar"
  "php73-pcntl"
  "php73-posix"
  "php73-shmop"
  "php73-sockets"
  "php73-sysvmsg"
  "php73-sysvsem"
  "php73-sysvshm"
  "php73-tokenizer"
  "php73-dba"
  "php73-pgsql"
  "php73-odbc"
  "php73-firebird"
  "php73-interbase"
  "php73-dblib"
  "php73-sqlite"
  "php73-gd"
  "php73-exif"
  "php73-tidy"
  "php73-iconv"
  "php73-xmlrpc"
  "php73-bcmath"
  "php73-gmp"
  "php73-zip"
  "php73-bz2"
  "php73-json"
  "php73-fileinfo"
  "php73-ctype"
  "php73-recode"
  "php73-mbstring"
  "php73-pspell"
  "php73-enchant"
  "php73-intl"
  "php73-calendar"
  "php73-gettext"
  "php73-soap"
  "php73-ftp"
  "php73-curl"
  "php73-snmp"
  "php73-ldap"
  "php73-imap"
  "php73-sodium"
  "php73-opcache"
)
source=(
  "make-tests.patch"
  "php-makefile-patcher.php"
  "php-apache.conf"
  "https://php.net/distributions/php-${pkgver}.tar.xz"
  "php-libxml.patch"
  "libxml-21200-php-7.0.patch"
  "litespeed-phpheader.patch"
  "php71-phar-names.patch"
  "openssl-sslv3-consts.patch"
  "fpm-numeric-uid-gid.patch"
  "fpm-reload-sighup.patch"
  "mysql-socket-php7.1.patch"
  "php-enchant-php5.3.patch"
  "php-enchant-depr.patch"
  "php-freetype-2.9.1.patch"
  "php-icu-php7.3.patch"
  "recode-php5.3.patch"
  "debian-php-7.3.33.patch"
  "php-phpinfo.patch"
  "timezonedb-guess.patch"
  "timezonedb-php7.3.patch"
)
depends=(
)
makedepends=(
  "acl"
  "libtool"
  "autoconf"
  "automake"
  "patchelf"
  "gawk"
  "sed"
  "bash"
  "python"
  "libxml2"
  "pam"
  "krb5"
  "zlib"
  "libedit"
  "smtp-forwarder"
  "pcre"
  "apache"
  "ncurses"
  "libxcrypt"
  "systemd"
  "systemd-libs"
  "coreutils"
  "findutils"
  "argon2"
  "libxslt"
  "e2fsprogs"
  "openssl-1.1"
  "lmdb"
  "db5.3"
  "postgresql-libs"
  "unixodbc"
  "libfbclient"
  "libfbclient"
  "freetds"
  "sqlite"
  "gd"
  "tidy"
  "gmp"
  "libzip"
  "recode"
  "aspell"
  "enchant"
  "libvoikko"
  "hspell"
  "hunspell"
  "nuspell"
  "aspell"
  "icu"
  "curl"
  "net-snmp"
  "libsasl"
  "libldap"
  "c-client"
  "pam"
  "libsodium"
)
arch=(
)
_patches=(
  "php-libxml.patch"
  "libxml-21200-php-7.0.patch"
  "litespeed-phpheader.patch"
  "php71-phar-names.patch"
  "openssl-sslv3-consts.patch"
  "fpm-numeric-uid-gid.patch"
  "fpm-reload-sighup.patch"
  "mysql-socket-php7.1.patch"
  "php-enchant-php5.3.patch"
  "php-enchant-depr.patch"
  "php-freetype-2.9.1.patch"
  "php-icu-php7.3.patch"
  "recode-php5.3.patch"
  "debian-php-7.3.33.patch"
  "php-phpinfo.patch"
  "timezonedb-guess.patch"
  "timezonedb-php7.3.patch"
)
_sapi_depends=(
  "libxml2"
  "pcre2"
  "libedit"
  "argon2"
)
_ext_depends_snmp=(
  "php73=7.3.33"
  "net-snmp"
  "openssl-1.1"
)
_ext_depends_ftp=(
  "php73=7.3.33"
  "openssl-1.1"
)
_ext_depends_intl=(
  "php73=7.3.33"
  "icu"
)
_ext_depends_imap=(
  "php73=7.3.33"
  "pam"
  "krb5"
  "c-client"
  "libxcrypt"
  "openssl-1.1"
)
_ext_depends_gd=(
  "php73=7.3.33"
  "gd"
)
_ext_depends_mysql=(
  "php73=7.3.33"
  "php73-pdo=7.3.33"
)
_ext_depends_dba=(
  "php73=7.3.33"
  "db5.3"
  "lmdb"
)
_ext_depends_odbc=(
  "php73=7.3.33"
  "unixodbc"
  "php73-pdo=7.3.33"
)
_ext_depends_pgsql=(
  "php73=7.3.33"
  "postgresql-libs"
  "php73-pdo=7.3.33"
)
_ext_depends_firebird=(
  "php73=7.3.33"
  "libfbclient"
  "php73-pdo=7.3.33"
)
_ext_depends_sqlite=(
  "php73=7.3.33"
  "sqlite"
  "php73-pdo=7.3.33"
)
_ext_depends_mbstring=(
  "php73=7.3.33"
)
_ext_depends_openssl=(
  "php73=7.3.33"
  "krb5"
  "e2fsprogs"
  "openssl-1.1"
)
_phpconfig="\
    --prefix=/usr \
    --sbindir=/usr/bin \
    --localstatedir=/var \
    --with-layout=GNU \
    --disable-debug \
    --mandir=/usr/share/man \
    --srcdir=../php-${pkgver} \
    --libdir=/usr/lib/php${_phpbase}${_suffix} \
    --datadir=/usr/share/php${_phpbase}${_suffix} \
    --program-suffix=${_phpbase}${_suffix} \
    --with-config-file-scan-dir=/${_build_conf_d} \
    --enable-filter \
    --enable-session \
    --with-mhash=/usr \
    --with-kerberos \
    --with-mysql-sock=${_build_mysql_socket} \
    --enable-mysqlnd-compression-support \
    --datarootdir=/usr/share/php${_phpbase}${_suffix} \
    --with-zlib \
    --enable-libxml \
    --with-pcre-regex=/usr \
    --with-password-argon2=/usr \
    --disable-rpath \
    --config-cache \
    --with-system-tzdata \
    --with-openssl=/usr \
    --enable-phpdbg-readline \
    --with-libedit"
_phpextensions="\
    --enable-xml=shared \
    --with-xsl=shared \
    --enable-xmlreader=shared \
    --enable-xmlwriter=shared \
    --enable-wddx=shared \
    --enable-dom=shared \
    --enable-simplexml=shared \
    --enable-pdo=shared \
    --enable-mysqlnd=shared \
    --with-mysqli=shared,mysqlnd \
    --with-pdo-mysql=shared,mysqlnd \
    --enable-phar=shared \
    --enable-pcntl=shared \
    --enable-posix=shared \
    --enable-shmop=shared \
    --enable-sockets=shared \
    --enable-sysvmsg=shared \
    --enable-sysvsem=shared \
    --enable-sysvshm=shared \
    --enable-tokenizer=shared
    --enable-dba=shared \
    --with-db4=/usr \
    --without-gdbm \
    --with-cdb \
    --with-lmdb=/usr \
    --with-pgsql=shared,/usr \
    --with-pdo-pgsql=shared,/usr \
    --with-unixODBC=shared,/usr \
    --with-pdo-odbc=shared,unixODBC,/usr \
    --with-pdo-firebird=shared,/usr \
    --with-interbase=shared,/usr \
    --with-pdo-dblib=shared,/usr \
    --with-pdo-sqlite=shared,/usr \
    --with-sqlite3=shared,/usr \
    --with-gd=shared,/usr
    --with-webp-dir=/usr \
    --with-jpeg-dir=/usr \
    --with-png-dir=/usr \
    --with-xpm-dir=/usr \
    --with-freetype-dir=/usr \
    --enable-exif=shared \
    --with-tidy=shared,/usr \
    --with-iconv=shared \
    --with-xmlrpc=shared \
    --enable-bcmath=shared \
    --with-gmp=shared,/usr \
    --enable-zip=shared \
    --with-libzip=/usr \
    --with-bz2=shared,/usr \
    --enable-json=shared \
    --enable-fileinfo=shared \
    --enable-ctype=shared \
    --with-recode=shared \
    --enable-mbstring=shared \
    --enable-mbregex \
    --enable-mbregex-backtrack \
    --with-pspell=shared,/usr \
    --with-enchant=shared,/usr \
    --enable-intl=shared \
    --enable-calendar=shared \
    --with-gettext=shared,/usr \
    --enable-soap=shared \
    --enable-ftp=shared \
    --with-curl=shared,/usr \
    --with-snmp=shared,/usr \
    --with-ldap=shared,/usr \
    --with-ldap-sasl=/usr \
    --with-imap=shared,/usr \
    --with-imap-ssl=yes \
    --with-sodium=shared \
    --enable-opcache \
    --enable-huge-code-pages"
_phpextensions_fpm="\
    --with-fpm-user=http \
    --with-fpm-group=http \
    --with-fpm-systemd \
    --with-fpm-acl"

options=('!lto')
arch=("$CARCH")
checkdepends=('procps-ng' 'smtp-forwarder')
license=('PHP')
url='http://www.php.net'

################################################################################
# Prepare it
################################################################################
prepare() {
  pushd "php-${pkgver}"

  echo "[SED] scripts/phpize.in"
  sed -E "s|(includedir[\t ]*=.*/php)|\1${_phpbase}${_suffix}|g" \
    -i scripts/phpize.in

  echo "[SED] scripts/phpize.m4"
  sed -e "s|\[php-config\]|\[php-config${_phpbase}${_suffix}\]|g" \
    -e "s|\(PHP_ARG_WITH(\[php-config\)${_phpbase}${_suffix}\]|\1]|g" \
    -e "s|php-config, no|php-config${_phpbase}${_suffix}, no|g" \
    -i "scripts/phpize.m4"

  echo "[SED] scripts/Makefile.frag"
  sed -E "s|(phpincludedir[\t ]*=.*/php)|\1${_phpbase}${_suffix}|g" \
    -i scripts/Makefile.frag

  echo "[SED] scripts/php-config.in"
  sed -E "s|(include_dir[\t ]*=.*php)|\1${_phpbase}${_suffix}|g" \
    -i scripts/php-config.in

  echo "[SED] sapi/apache2handler/config.m4"
  sed -e '/APACHE_THREADED_MPM=/d' \
    -i sapi/apache2handler/config.m4

  echo "[SED] sapi/fpm/Makefile.frag"
  # sed -e 's#php-fpm\$(program_suffix)#php\$(program_suffix)-fpm#'
  sed -e 's/.conf.default/.conf/g' \
    -i sapi/fpm/Makefile.frag

  echo "[SED] sapi/fpm/php-fpm.service.in"
  sed -E "s|ExecStart[\s]?=[\s]?@([a-zA-Z_]+)@/php-fpm|ExecStart=@\1@/${_build_fpm_name}|g; \
            s|PIDFile[\s]?=[\s]?@([a-zA-Z_]+)@/run/php-fpm.pid|PIDFile=/run/${_build_fpm_service_name}/php-fpm.pid|g" \
    -i sapi/fpm/php-fpm.service.in

  local _check_files=("sapi/fpm/www.conf.in" "sapi/fpm/php-fpm.conf.in")
  for file_conf in "${_check_files[@]}"; do
    if [[ ! -f $file_conf ]]; then
      continue
    fi
    echo "[SED] ${file_conf}"
    sed -e "s#^listen =.*#listen = /run/${_build_fpm_service_name}/php-fpm.sock#" \
      -e "s#run/php-fpm.pid#/run/${_build_fpm_service_name}/php-fpm.pid#" \
      -e 's#^;*[ \t]*listen.owner =#listen.owner =#' \
      -e 's#^;*[ \t]*listen.group =#listen.group =#' \
      -e 's#^;*[ \t]*error_log =.*#error_log = syslog#' \
      -e 's#^;*[ \t]*chdir =.*#;chdir = /srv/http#' \
      -i "${file_conf}"
  done

  echo "[SED] php.ini-production"
  sed -e 's#^;*[ \t]*extension_dir[\t ]*=.*/.*$#extension_dir = "___EXTENSIONDIR___"#' \
    -e "s#___EXTENSIONDIR___#/usr/lib/${pkgbase}/modules#g" \
    -e "s#^;*[ \t]*extension=#;extension=#g" \
    -e "s#^;*[ \t]*session.save_path[\t ]*=.*#session.save_path=___SESSIONS___#g" \
    -e "s#___SESSIONS___#/var/lib/${pkgbase}/sessions#g" \
    -i php.ini-production

  for patch_name in "${_patches[@]}"; do
    echo "[PATCH] Applying source patch ${patch_name}"
    patch -p1 -i "../${patch_name}"
  done

  if ((_phpbase <= 53)); then
    PHP_AUTOCONF="/usr/bin/autoconf-2.13" ./buildconf --force
  else
    ./buildconf --force
  fi
  rm -f tests/output/stream_isatty_*.phpt
  rm -f Zend/tests/arginfo_zpp_mismatch*.phpt
  rm -f Zend/tests/bug79919.phpt
  popd
}

_build_sapi() {
  _sapi="${1}"
  _commands="${2}"
  if ((_sapi == "cli")); then
    if [[ ! -d "build-${_sapi}" ]]; then
      mkdir "build-${_sapi}"
    fi
    pushd "build-${_sapi}"
    if [[ -L configure ]]; then
      rm configure
    fi
    ln -s "../php-${pkgver}/configure"
    popd
  else
    cp -Ta "build-cli" "build-${_sapi}"
  fi

  pushd "build-${_sapi}"
  ./configure ${_phpconfig} ${_commands}
  patch -p1 -i "${srcdir}/make-tests.patch"

  if (($_sapi != "cli")); then
    make clean
  fi
  if ((!_build_with_custom_icu)); then
    sed -i -e 's|^hardcode_libdir_flag_spec=.*|hardcode_libdir_flag_spec=""|g' \
      -e 's|^runpath_var=LD_RUN_PATH|runpath_var=LIBTOOL_IS_BROKED|g' \
      libtool
  fi
  make
  popd
}

################################################################################
# BUILD them all
################################################################################
build() {
  export CFLAGS="${CFLAGS} -fPIC -Wno-error=incompatible-pointer-types"
  export CXXFLAGS="${CXXFLAGS} -fPIC -Wno-error=incompatible-pointer-types -std=c++17"
  export EXTENSION_DIR="/usr/lib/${pkgbase}/modules"
  if ((_build_openssl_v10_patch)); then
    export PHP_OPENSSL_DIR="/usr/lib/openssl-1.0"
    export PKG_CONFIG_PATH="/usr/lib/openssl-1.0/pkgconfig"
  elif ((_build_forced_openssl_11)); then
    export PHP_OPENSSL_DIR="/usr/lib/openssl-1.1"
    export PKG_CONFIG_PATH="/usr/lib/openssl-1.1/pkgconfig"
  fi
  if [[ ! -z "${_cppflags}" ]]; then
    CPPFLAGS+=" $_cppflags "
  fi
  if ((_build_with_custom_icu)); then
    local _php5_icu_first="${srcdir}/${_build_icu_src_dir}/php${_phpbase}${suffix}-icu${_pkgver_icu}"
    LDFLAGS+="-Wl,-rpath=$ORIGIN/usr/lib/${pkgbase}/icu${_pkgver_icu}/lib"
    _phpextensions+=" --with-icu-dir=${_php5_icu_first} "
    if [[ ! -d $_php5_icu_first ]]; then
      mkdir -p "${_php5_icu_first}"
    fi
    pushd "${_build_icu_src_dir}"
    ./configure --prefix="${_php5_icu_first}" \
      --sysconfdir="${_php5_icu_first}/etc" \
      --mandir="${_php5_icu_first}/share/man" \
      --sbindir="${_php5_icu_first}/bin" \
      --libdir="${_php5_icu_first}/lib" \
      --includedir="${_php5_icu_first}/include" \
      --disable-tests \
      --disable-debug
    make -j$(nproc)
    make install
    ./configure --prefix="/usr/lib/${pkgbase}/icu${_pkgver_icu}" \
      --sysconfdir="/usr/lib/${pkgbase}/icu${_pkgver_icu}/etc" \
      --mandir="/usr/lib/${pkgbase}/icu${_pkgver_icu}/share/man" \
      --sbindir="/usr/lib/${pkgbase}/icu${_pkgver_icu}/bin" \
      --libdir="/usr/lib/${pkgbase}/icu${_pkgver_icu}/lib" \
      --includedir="/usr/lib/${pkgbase}/icu${_pkgver_icu}/include" \
      --disable-tests \
      --disable-debug
    make -j$(nproc)
    popd
  fi

  if ((_build_ini_per_sapi || _build_per_sapi)); then

    # CLI
    _cli_addons=''
    if ((!_build_per_sapi)); then
      # CGI enabled here only for tests passing, then overriden later by cgi build
      _cli_addons+=" --enable-cgi "
    fi
    _build_sapi "cli" "\
        --sysconfdir=/${_build_sapi_ini_cli} \
        --with-config-file-path=/${_build_sapi_ini_cli} \
        --enable-cli \
        ${_phpextensions} \
        ${_cli_addons} \
        --disable-fpm \
        --disable-embed \
        --disable-phpdbg \
    "

    # phpdbg
    if ((_build_phpdbg)); then
      _sapi="phpdbg"
      _build_sapi "phpdbg" "\
            --sysconfdir=/${_build_sapi_ini_phpdbg} \
            --with-config-file-path=/${_build_sapi_ini_phpdbg} \
            --disable-all \
            --enable-phpdbg \
            --disable-cgi \
            --disable-cli \
            --disable-fpm \
            --disable-embed \
        "
    fi

    # embed
    _build_sapi "embed" "\
        --sysconfdir=/${_build_sapi_ini_embed}  \
        --with-config-file-path=/${_build_sapi_ini_embed}  \
        --disable-all \
        --enable-embed=shared \
        --disable-cgi \
        --disable-cli \
        --disable-fpm \
        --disable-phpdbg \
    "

    # cgi
    _build_sapi "cgi" "\
        --sysconfdir=/${_build_sapi_ini_cgi} \
        --with-config-file-path=/${_build_sapi_ini_cgi} \
        --disable-all \
        --enable-cgi \
        --disable-cli \
        --disable-fpm \
        --disable-embed \
        --disable-phpdbg \
    "

    # litespeed
    _cflags="${CFLAGS}"
    export CFLAGS="${CFLAGS} -Wno-error=format-security"
    _build_sapi "litespeed" "\
        --sysconfdir=/${_build_sapi_ini_litespeed} \
        --with-config-file-path=/${_build_sapi_ini_litespeed} \
        --disable-all \
        --disable-cgi \
        --disable-cli \
        --disable-fpm \
        --disable-embed \
        --disable-phpdbg \
        ${_build_sapi_litespeed} \
    "
    export CFLAGS="${_cflags}"

    # fpm
    _build_sapi "fpm" "\
        --sysconfdir=/${_build_sapi_ini_fpm} \
        --with-config-file-path=/${_build_sapi_ini_fpm} \
        --disable-all \
        --enable-fpm \
        ${_phpextensions_fpm} \
        --disable-cli \
        --disable-cgi \
        --disable-embed \
        --disable-phpdbg \
    "
  else

    # CLI
    if ((_build_phpdbg)); then
      _cli_addons+=" --enable-phpdbg "
    fi
    _build_sapi "cli" "\
        --sysconfdir=/${_build_sapi_ini_cli} \
        --with-config-file-path=/${_build_sapi_ini_cli} \
        --enable-cli \
        ${_phpextensions} \
        ${_cli_addons} \
        --enable-fpm \
        --enable-cgi \
        --enable-embed=shared \
        --enable-fpm \
        ${_phpextensions_fpm} \
        ${_build_sapi_litespeed} \
    "
  fi

  # apache
  _build_sapi "apache" "\
        --disable-all \
        --disable-cli \
        --disable-cgi \
        --disable-fpm \
        --disable-embed \
        --disable-phpdbg \
        --with-apxs2 \
        --sysconfdir=/${_build_sapi_ini_apache} \
        --with-config-file-path=/${_build_sapi_ini_apache} \
    "

}

check() {
  export CFLAGS="${CFLAGS} -fPIC"
  export CXXFLAGS="${CXXFLAGS} -fPIC"
  pushd "build-cli"
  # Check if sendmail was configured correctly (FS#47600)
  export REPORT_EXIT_STATUS=1
  export NO_INTERACTION=1
  export SKIP_ONLINE_TESTS=1
  export SKIP_SLOW_TESTS=1
  export TESTS='tests Zend'
  if ((_phpbase > 73)); then
    export TEST_PHP_ARGS="-j$(nproc)"
  fi
  # Patch tests to run PHP modules in needed order
  sapi/cli/php -n ../php-makefile-patcher.php Makefile
  make test
  popd
}

################################################################################
# Custom code
################################################################################
_install_module_ini() {
  local extension=$(echo "${1}" | sed 's/\.so//')
  local priority="${_priority_default}"
  case "${extension}" in
    "json")
      priority="${_priority_json}"
      ;;
    "xml")
      priority="${_priority_xml}"
      ;;
    "openssl")
      priority="${_priority_openssl}"
      ;;
    "mysqlnd")
      priority="${_priority_mysqlnd}"
      ;;
    "pdo")
      priority="${_priority_pdo}"
      ;;
    "opcache")
      priority="${_priority_opcache}"
      ;;
    "dom")
      priority="${_priority_dom}"
      ;;
  esac
  local extension_type="extension"
  case "${extension}" in
    "opcache" | "xdebug")
      extension_type="zend_extension"
      ;;
    "recode")
      extension_type=";extension"
      ;;
  esac

  if [[ ! -d "${pkgdir}/${_build_conf_d}" ]]; then
    mkdir -p "${pkgdir}/${_build_conf_d}"
  fi
  echo "${extension_type}=${extension}.so" > "${pkgdir}/${_build_conf_d}/${priority}-${extension}.ini"
  chmod 0644 "$pkgdir/${_build_conf_d}/${priority}-${extension}.ini"
  _last_priority=${priority}
  _last_extension=${extension}
}

_install_module() {
  if [[ -f "build-cli/modules/${1}.so" ]]; then
    install -D -m755 "build-cli/modules/${1}.so" "${pkgdir}/usr/lib/${pkgbase}/modules/${1}.so"
    _install_module_ini "${1}"
  else
    echo "[DEBUG]: Install_module can't find ${1}.so, skipped"
  fi
}

###############################################################################
# PHP: SAPI's
###############################################################################

# Main package
package_php73() {
  # Binary names
  pkgdesc='PHP. A general-purpose scripting language that is especially suited to web development'
  depends=('zlib' 'pcre' 'libedit')
  if ((_build_with_custom_icu)); then
    pushd "${_build_icu_src_dir}"
    make DESTDIR="${pkgdir}" install
    popd
    pushd "${pkgdir}/usr/lib/${pkgbase}/icu${_pkgver_icu}"
    rm -rf bin include share
    popd
  fi

  # Install session dir
  install -d -m1733 "${pkgdir}/var/lib/${pkgbase}/sessions"

  # conf.d dir with shared modules
  install -d -m755 "${pkgdir}/${_build_conf_d}/"

  pushd "build-cli"
  make -j1 INSTALL_ROOT=${pkgdir} install-{modules,build,headers,programs}
  # Cleanup for CGI"
  rm -rf "${pkgdir}/usr/bin/${pkgbase}-cgi"
  popd

  pushd "${pkgdir}/usr/lib/${pkgbase}/modules/"
  # remove static modules
  rm -f *.a
  # remove modules provided by subpackages
  rm -f {enchant,imap,intl,pspell,snmp,tidy,curl,ldap,bz2,bcmath,soap,zip,gmp,dba,opcache,json,gd,mcrypt,sodium,recode}.so
  rm -f {pdo_dblib,mssql}.so
  rm -f {dom,simplexml,xml,xmlreader,xmlwriter,xsl,wddx,xmlrpc}.so
  rm -f {pgsql,pdo_pgsql}.so
  rm -f {odbc,pdo_odbc}.so
  rm -f {pdo_sqlite,sqlite3}.so
  rm -f {pdo_firebird.so,interbase.so}
  rm -f {mysqli,pdo_mysql,mysqlnd,mysql}.so
  rm -f {openssl,ffi,pcntl,ftp,calendar,ctype,fileinfo,iconv,mbstring,exif,pdo,phar,posix,shmop}.so
  rm -f {sockets,tokenizer,gettext,sysvmsg,sysvsem,sysvshm}.so
  popd
  pushd build-cli
  if ((!_build_ini_per_sapi)); then
    backup=("${_build_sapi_ini_cli}/php.ini")
    install -d -m755 "${pkgdir}/${_build_sapi_ini_cli}"
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_cli}/php.ini"
  fi
  popd
}

# Cli + phar
package_php73-cli() {
  _sapi="cli"
  pkgdesc="cli (command-line executable) version for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  depends+=("${_sapi_depends[@]}")
  pushd "build-${_sapi}"
  make -j1 INSTALL_ROOT="${pkgdir}" install-cli
  make -j1 INSTALL_ROOT="${pkgdir}" install-pharcmd
  if ((_build_ini_per_sapi)); then
    backup=("${_build_sapi_ini_cli}/php.ini")
    install -d -m755 "${pkgdir}/${_build_sapi_ini_cli}"
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_cli}/php.ini"
  fi
  # Cleanup for CGI
  rm -rf "${pkgdir}/usr/bin/${pkgbase}-cgi"
  popd
}
# End cli

# CGI
package_php73-cgi() {
  _sapi="cgi"
  pkgdesc="CGI and FCGI SAPI for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  depends+=("${_sapi_depends[@]}")
  if ((_build_ini_per_sapi || _build_per_sapi)); then
    pushd "build-${_sapi}"
  else
    pushd "build-cli"
  fi
  if ((_build_ini_per_sapi)); then
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_cgi}/php.ini"
    backup=("${_build_sapi_ini_cgi}/php.ini")
  fi
  case "${_phpbase}" in
    53 | 54)
      install -D -m755 sapi/cgi/php-cgi "${pkgdir}/usr/bin/${pkgbase}-cgi"
      ;;
    *)
      make -j1 INSTALL_ROOT="${pkgdir}" install-cgi
      ;;
  esac
  popd
}
# CGI end

# Apache
package_php73-apache() {
  _sapi="apache"
  _build_mod_php_so="libphp${_suffix_so}.so"
  _build_mod_php_module="php${_suffix_so}_module"
  _build_build_php_script_name="php${_suffix_so}-script"
  _apache_module_conf="${pkgbase}-module.conf"
  pkgdesc="Apache SAPI for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'apache')
  depends+=("${_sapi_depends[@]}")
  depends+=('libxcrypt')
  depends+=('ncurses')
  backup=("${_build_apache_cfg}/${_apache_module_conf}")
  echo "# End of LoadModule in httpd.conf - see ArchWiki Apache HTTP Server"
  echo "LoadModule ${_build_mod_php_module} modules/lib${pkgbase}.so"
  echo "AddHandler ${_build_php_script_name} .php"
  echo "# End of Include List"
  echo "Include conf/extra/${_apache_module_conf}"

  pushd "build-${_sapi}"
  if ((_build_ini_per_sapi)); then
    backup+=("${_build_sapi_ini_apache}/php.ini")
    install -d -m755 "${pkgdir}/${_build_sapi_ini_apache}"
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_apache}/php.ini"
  fi
  install -D -m755 "libs/${_build_mod_php_so}" "${pkgdir}/usr/lib/httpd/modules/lib${pkgbase}.so"
  patchelf --set-soname \
    "lib${pkgbase}.so" \
    "${pkgdir}/usr/lib/httpd/modules/lib${pkgbase}.so"
  popd

  install -D -m644 "php-apache.conf" "${pkgdir}/${_build_apache_cfg}/${_apache_module_conf}"
  echo "[SED] ${pkgdir}/${_build_apache_cfg}/${_apache_module_conf}"
  sed -e "s#@MODULE@#${_build_mod_php_module}#" \
    -i "${pkgdir}/${_build_apache_cfg}/${_apache_module_conf}"
}
# Apache end

# FPM
package_php73-fpm() {
  _sapi="fpm"
  install="php-fpm.install"
  pkgdesc="FastCGI Process Manager for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'systemd-libs' 'acl')
  depends+=("${_sapi_depends[@]}")
  backup=("${_build_sapi_ini_fpm}/php-fpm.conf")
  if ((_phpbase >= 70)); then
    backup+=("${_build_sapi_ini_fpm}/php-fpm.d/www.conf")
  fi
  options=('!emptydirs')
  if ((_build_ini_per_sapi || _build_per_sapi)); then
    pushd "build-${_sapi}"
  else
    pushd "build-cli"
  fi
  if ((_build_ini_per_sapi)); then
    backup+=("${_build_sapi_ini_fpm}/php.ini")
    install -d -m755 "${pkgdir}/${_build_sapi_ini_fpm}/"
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_fpm}/php.ini"
  fi
  make -j1 INSTALL_ROOT="${pkgdir}" install-fpm
  install -D -m644 "sapi/fpm/php-fpm.service" "${pkgdir}/usr/lib/systemd/system/${_build_fpm_service_name}.service"
  echo "d /run/${_build_fpm_service_name} 755 root root" > php-fpm.tmpfiles
  install -D -m644 "php-fpm.tmpfiles" "${pkgdir}/usr/lib/tmpfiles.d/${_build_fpm_service_name}.conf"
  popd
}
# FPM end

# embed sapi
package_php73-embed() {
  _sapi="embed"
  pkgdesc="Embedded PHP SAPI library for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'ncurses' 'systemd-libs' 'libxcrypt' 'acl' 'ncurses')
  depends+=("${_sapi_depends[@]}")
  options=('!emptydirs')
  if ((_build_ini_per_sapi || _build_per_sapi)); then
    pushd "build-${_sapi}"
  else
    pushd "build-cli"
  fi
  install -d -m755 "${pkgdir}/${_build_sapi_ini_embed}"
  if ((_build_ini_per_sapi)); then
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_embed}/php.ini"
    backup=("${_build_sapi_ini_embed}/php.ini")
  fi
  make -j1 INSTALL_ROOT="${pkgdir}" PHP_SAPI=embed install-sapi
  mv "${pkgdir}/usr/lib/libphp${_suffix_so}.so" "${pkgdir}/usr/lib/lib${pkgbase}.so"
  popd
  patchelf --set-soname "lib${pkgbase}.so" "${pkgdir}/usr/lib/lib${pkgbase}.so"
}
# embed sapi end

# phpdbg sapi
package_php73-phpdbg() {
  _sapi="phpdbg"
  options=('!emptydirs')
  pkgdesc="Interactive PHP debugger for ${pkgbase} ($_sapi)"
  depends=("${pkgbase}=${pkgver}")
  depends+=("${_sapi_depends[@]}")
  if ((_build_ini_per_sapi || _build_per_sapi)); then
    pushd "build-${_sapi}"
  else
    pushd "build-cli"
  fi
  if ((_build_ini_per_sapi)); then
    backup=("${_build_sapi_ini_phpdbg}/php.ini")
    install -d -m755 "${pkgdir}/${_build_sapi_ini_phpdbg}"
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_phpdbg}/php.ini"
  fi
  make -j1 INSTALL_ROOT="${pkgdir}" "install-${_sapi}"
  popd
}
# phpdbg sapi end

# litespeed sapi
package_php73-litespeed() {
  _sapi="litespeed"
  pkgdesc="LiteSpeed SAPI for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  depends+=("${_sapi_depends[@]}")
  if ((_build_ini_per_sapi || _build_per_sapi)); then
    pushd "build-${_sapi}"
  else
    pushd "build-cli"
  fi
  if ((_build_ini_per_sapi)); then
    install -D -m644 "../php-${pkgver}/php.ini-production" "${pkgdir}/${_build_sapi_ini_cgi}/php.ini"
    backup=("${_build_sapi_ini_cgi}/php.ini")
  fi
  case "${_phpbase}" in
    *)
      install -D -m755 sapi/litespeed/php "${pkgdir}/usr/bin/ls${pkgbase}"
      ;;
  esac
  popd
}
# litespeed sapi end

###############################################################################
# PHP Modules: First need
###############################################################################

# OpenSSL
package_php73-openssl() {
  pkgdesc="OpenSSL module for ${pkgbase}"
  depends=("${_ext_depends_openssl[@]}")
  _install_module openssl
}

# Json
package_php73-json() {
  pkgdesc="json module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module json
}

# pdo
package_php73-pdo() {
  pkgdesc="pdo module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module pdo
}

# mbstring
package_php73-mbstring() {
  pkgdesc="mbstring module for ${pkgbase}"
  depends=("${_ext_depends_mbstring[@]}")
  _install_module mbstring
}

# phar
package_php73-phar() {
  pkgdesc="phar module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module phar
}

###############################################################################
# PHP modules: XML
###############################################################################

# XML modules combined package
package_php73-xml() {
  pkgdesc="xml modules for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libxml2')
  _install_module xml
}

package_php73-wddx() {
  pkgdesc="wddx module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}")
  _install_module wddx
}

package_php73-simplexml() {
  pkgdesc="simplexml module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}")
  _install_module simplexml
}

package_php73-dom() {
  pkgdesc="dom module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}")
  _install_module dom
}

package_php73-xmlreader() {
  pkgdesc="xmlreader module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}")
  _install_module xmlreader
}

package_php73-xmlwriter() {
  pkgdesc="xmlwriter module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}")
  _install_module xmlwriter
}

# Tidy
package_php73-tidy() {
  pkgdesc="tidy module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'tidy')
  _install_module tidy
}

# XSL
package_php73-xsl() {
  pkgdesc="xsl module for ${pkgbase}"
  depends=("php${_phpbase}-xml${_suffix}=${pkgver}" "php${_phpbase}-dom${_suffix}=${pkgver}")
  depends+=('libxslt')
  _install_module xsl
}

###############################################################################
# PHP modules: Databases
###############################################################################

# MySQL
package_php73-mysql() {
  pkgdesc="MySQL modules for ${pkgbase}"
  depends=("${_ext_depends_mysql[@]}")
  _install_module mysqlnd
  _install_module mysql
  _install_module mysqli
  _install_module pdo_mysql
}

# pdo_sqlite + sqlite3
package_php73-sqlite() {
  pkgdesc="sqlite module for ${pkgbase}"
  depends=("${_ext_depends_sqlite[@]}")
  _install_module sqlite3
  _install_module pdo_sqlite
}

# ODBC
package_php73-odbc() {
  pkgdesc="ODBC modules for ${pkgbase}"
  depends=("${_ext_depends_odbc[@]}")
  _install_module odbc
  _install_module pdo_odbc
}

# PostgreSQL
package_php73-pgsql() {
  pkgdesc="PostgreSQL modules for ${pkgbase}"
  depends=("${_ext_depends_pgsql[@]}")
  _install_module pgsql
  _install_module pdo_pgsql
}

# interbase
package_php73-interbase() {
  pkgdesc="interbase module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" "libfbclient")
  _install_module interbase
}

# firebird
package_php73-firebird() {
  pkgdesc="pdo_firebird module for ${pkgbase}"
  depends=("${_ext_depends_firebird[@]}")
  _install_module pdo_firebird
}

# pdo_dblib
package_php73-dblib() {
  depends=("${pkgbase}=${pkgver}" 'freetds')
  pkgdesc="pdo_dblib module for ${pkgbase}"
  _install_module pdo_dblib
}

# mssql
package_php73-mssql() {
  depends=("${pkgbase}=${pkgver}" 'freetds')
  pkgdesc="mssql module for ${pkgbase}"
  _install_module mssql
}

# Dba
package_php73-dba() {
  pkgdesc="dba module for ${pkgbase}"
  depends=("${_ext_depends_dba[@]}")
  _install_module dba
}

###############################################################################
# PHP Modules: internationalization, text, datetime
###############################################################################

# Intl
package_php73-intl() {
  pkgdesc="intl module for ${pkgbase}"
  depends=("${_ext_depends_intl[@]}")
  if ((_build_with_custom_icu)); then
    # Patch to proper path inside intl.so
    patchelf --set-rpath "/usr/lib/${pkgbase}/icu${_pkgver_icu}/lib" "build-cli/modules/intl.so"
  fi
  _install_module intl
}

# Recode
package_php73-recode() {
  pkgdesc="recode module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'recode')
  _install_module recode
}

# gettext
package_php73-gettext() {
  pkgdesc="gettext module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module gettext
}

# iconv
package_php73-iconv() {
  pkgdesc="iconv module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module iconv
}

# calendar
package_php73-calendar() {
  pkgdesc="calendar module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module calendar
}

###############################################################################
# PHP Modules: multimedia
###############################################################################

# GD
package_php73-gd() {
  pkgdesc="gd module for ${pkgbase}"
  depends=("${_ext_depends_gd[@]}")
  _install_module gd
}

# exif
package_php73-exif() {
  pkgdesc="exif module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module exif
}

# fileinfo
package_php73-fileinfo() {
  pkgdesc="fileinfo module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module fileinfo
}

###############################################################################
# PHP modules: math
###############################################################################

# bcmath
package_php73-bcmath() {
  pkgdesc="bcmath module for ${pkgbase}"
  depends=("${pkgbase}")
  _install_module bcmath
}

# gmp
package_php73-gmp() {
  pkgdesc="gmp module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'gmp')
  _install_module gmp
}

###############################################################################
# PHP modules: spell checking
###############################################################################

# Enchant
package_php73-enchant() {
  pkgdesc="enchant module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'enchant' 'libvoikko' 'hspell' 'hunspell' 'nuspell' 'aspell')
  _install_module enchant
}

# Pspell
package_php73-pspell() {
  pkgdesc="pspell module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'aspell')
  _install_module pspell
}

###############################################################################
# PHP modules: compression
###############################################################################

# bz2
package_php73-bz2() {
  pkgdesc="bz2 module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'bzip2')
  _install_module bz2
}

# Zip
package_php73-zip() {
  pkgdesc="zip module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libzip')
  _install_module zip
}

###############################################################################
# PHP modules: network client/servers
###############################################################################

# curl
package_php73-curl() {
  pkgdesc="curl module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" "curl")
  _install_module curl
}

# SOAP
package_php73-soap() {
  pkgdesc="soap module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libxml2')
  _install_module soap
}

# FTP
package_php73-ftp() {
  pkgdesc="FTP module for ${pkgbase}"
  depends=("${_ext_depends_ftp[@]}")
  _install_module ftp
}

# ldap
package_php73-ldap() {
  pkgdesc="ldap module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libldap' 'libsasl')
  _install_module ldap
}

# SNMP
package_php73-snmp() {
  pkgdesc="snmp module for ${pkgbase}"
  depends=("${_ext_depends_snmp[@]}")
  _install_module snmp
}

# XML-RPC
package_php73-xmlrpc() {
  pkgdesc="xmlrpc module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libxml2')
  _install_module xmlrpc
}

# Imap
package_php73-imap() {
  pkgdesc="imap module for ${pkgbase}"
  depends=("${_ext_depends_imap[@]}")
  _install_module imap
}

# sockets
package_php73-sockets() {
  pkgdesc="sockets module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module sockets
}

###############################################################################
# PHP Modules: cryptography
###############################################################################

# Sodium
package_php73-sodium() {
  pkgdesc="sodium (libsodium) module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" "libsodium")
  _install_module sodium
}

# Mcrypt
package_php73-mcrypt() {
  pkgdesc="mcrypt module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libmcrypt')
  _install_module mcrypt
}

###############################################################################
# PHP Zend modules: opcache/jit
###############################################################################

# Opcache
package_php73-opcache() {
  pkgdesc="opcache zend module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module opcache
}

###############################################################################
# PHP posix, pcntl, shmop and System V modules
###############################################################################

# posix
package_php73-posix() {
  pkgdesc="posix module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module posix
}

# pcntl
package_php73-pcntl() {
  pkgdesc="pcntl module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module pcntl
}

# shmop
package_php73-shmop() {
  pkgdesc="shmop module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module shmop
}

# sysvmsg
package_php73-sysvmsg() {
  pkgdesc="sysvmsg module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module sysvmsg
}

# sysvsem
package_php73-sysvsem() {
  pkgdesc="sysvsem module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module sysvsem
}

# sysvshm
package_php73-sysvshm() {
  pkgdesc="sysvshm module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module sysvshm
}

###############################################################################
# PHP Misc modules
###############################################################################

# Ffi
package_php73-ffi() {
  pkgdesc="ffi module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libffi')
  _install_module ffi
}

# ctype
package_php73-ctype() {
  pkgdesc="ctype module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module ctype
}

# tokenizer
package_php73-tokenizer() {
  pkgdesc="tokenizer module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}")
  _install_module tokenizer
}

# libedit/readline
package_php73-readline() {
  pkgdesc="readline (libedit version) module for ${pkgbase}"
  depends=("${pkgbase}=${pkgver}" 'libedit')
  _install_module readline
}

sha256sums=('e6b8530d747000eebb0089249ec70a3b14add7b501337046700544883f62b17b'
  'ba72fc64f77822755a469314160d5889d5298f4eb5758dd7939dac9b811afe52'
  '6d0ad9becb5470ce8e5929d7d45660b0f32579038978496317544c5310281a91'
  '166eaccde933381da9516a2b70ad0f447d7cec4b603d07b9a916032b215b90cc'
  'e757f84d2d72ea39259450c32f3a83c72262da4294152ae3e9fbc0cada622bba'
  'b913755c16e33615bbe820fb6c7e4d5dcd87ca69828af6ca94fcf2ee8c98b31e'
  'c397a96905011907a2efa51dc9ea447dcf1a204f24fb190b9be156dbaae15dde'
  'ee6529d441b2446d784e80aba23aa956541e541bd73ad54aee480d4a1a6117ca'
  'aecd8dff7022e956718407a5b98dec19acdceef08b0a58e7266b483bc3845de6'
  'd175f0c14fdb22855090c93f76e18f04320d7bf15afc057ffde947f9bb361242'
  'f5ae925036744a5e88cea2698879aea0498e1e23aee7801923d90f16be383908'
  '0a3a6e8ff04ff1e0869befcf2c7bca4e886d94065da6d7a10b809a4750b961a0'
  '52c5a93fb03fa8f3f99438eb803b3182766ee04e0e6b76f00b0bc848d03ff6a6'
  '3049b76460c65a70017ba2aac8f8c45725df2bbea458a96ec7164db63639e87f'
  'e07ebf146cea8e734c7704ba94f18279642df2b2f09d868781746d165041b8d5'
  '68517bf6fd6ab2890877252f4233f1f7134b412b29d2dba20ef14d6fd1ac368b'
  'c9f3b0dff07a7e9688f60b92a2a15817bd7cd59a8c5278cae629d856be66de5c'
  '398486597b10dcd388dfb45486e575023d0b4b78ef0d6d0f3404826829300cdf'
  '558e780e93dfa861a366c49b4d156d8fc43f17898f001ae6033ec63c33d5d41c'
  '40bcc1e5058602302198d0925e431495391d8469499593af477f59d84d32f764'
  '1cb8f76b465e3c5cd383450bc1f898859f58270d3645fb7405f93d0e06cddac7')
