# Maintainer:

## links
# http://openboardview.org/

_pkgname="openboardview"
pkgname="$_pkgname-git"
pkgver=9.95.1.r0.g502d7ff
pkgrel=1
pkgdesc="Linux SDL/ImGui edition software for viewing .brd files"
url="https://github.com/OpenBoardView/OpenBoardView"
license=('MIT')
arch=('x86_64')

depends=(
  'fontconfig'
  'gtk3'
  'sdl2'
  'sqlite'
)
makedepends=(
  'cmake'
  'git'
  'ninja'
)
optdepends=('mdbtools: MDB file format support')

provides=("$_pkgname=${pkgver%%.r*}")
conflicts=("$_pkgname")

_source_main() {
  _pkgsrc="$_pkgname"
  source=("$_pkgsrc"::"git+https://github.com/OpenBoardView/OpenBoardView.git")
  sha256sums=('SKIP')
}

_source_openboardview() {
  source+=(
    'dav1dde.glad'::'git+https://github.com/Dav1dde/glad.git'
    'gulrak.filesystem'::'git+https://github.com/gulrak/filesystem.git'
    'madler.zlib'::'git+https://github.com/madler/zlib.git'
    'nothings.stb'::'git+https://github.com/nothings/stb.git'
    'ocornut.imgui'::'git+https://github.com/ocornut/imgui.git'
    'orangeduck.mpc'::'git+https://github.com/orangeduck/mpc.git'
    'sheredom.utf8.h'::'git+https://github.com/sheredom/utf8.h.git'
  )
  sha256sums+=(
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
  )
}

_prepare_openboardview() (
  cd "$srcdir/$_pkgsrc"
  local _submodules=(
    'dav1dde.glad'::'src/glad'
    'gulrak.filesystem'::'src/filesystem'
    'madler.zlib'::'src/zlib'
    'nothings.stb'::'src/stb'
    'ocornut.imgui'::'src/imgui'
    'orangeduck.mpc'::'src/mpc'
    'sheredom.utf8.h'::'src/utf8'
  )
  _submodule_update
)

_source_main
_source_openboardview

prepare() {
  _submodule_update() {
    local _module
    for _module in "${_submodules[@]}"; do
      git submodule init "${_module##*::}"
      git submodule set-url "${_module##*::}" "$srcdir/${_module%::*}"
      git -c protocol.file.allow=always submodule update "${_module##*::}"
    done
  }
  _prepare_openboardview
}

pkgver() {
  cd "$_pkgsrc"
  git describe --long --tags --always | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//'
}

build() {
  local _cmake_options=(
    -B build
    -S "$_pkgsrc"
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX='/usr'
    -Wno-dev
  )

  cmake "${_cmake_options[@]}"
  cmake --build build
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  cd "$_pkgsrc"
  install -Dm755 utilities/bvconv.sh "$pkgdir/usr/bin/bvconv"
  install -Dm644 LICENSE -t "$pkgdir/usr/share/licenses/$pkgname/"
}
