diff -Naur xfce4-panel-4.20.4-orig/plugins/pager/pager.c xfce4-panel-4.20.4/plugins/pager/pager.c
--- xfce4-panel-4.20.4-orig/plugins/pager/pager.c	2025-03-22 07:17:47.000000000 +0100
+++ xfce4-panel-4.20.4/plugins/pager/pager.c	2025-03-28 19:04:43.044454596 +0100
@@ -445,31 +445,96 @@
   active_ws = xfw_workspace_group_get_active_workspace (plugin->workspace_group);
   active_n = xfw_workspace_get_number (active_ws);
 
-  if (scrolling_direction == GDK_SCROLL_UP
-      || scrolling_direction == GDK_SCROLL_LEFT)
-    active_n--;
-  else
-    active_n++;
-
   n_workspaces = xfw_workspace_group_get_workspace_count (plugin->workspace_group) - 1;
 
-  if (plugin->wrap_workspaces)
+  /* Having one workspace is a special case: could be viewport mode (compiz) */
+  if (n_workspaces == 0)
     {
-      /* wrap around */
-      if (active_n < 0)
-        active_n = n_workspaces;
-      else if (active_n > n_workspaces)
-        active_n = 0;
+      /* Do we really have only one workspace or are we in viewport mode */
+      if (xfw_workspace_get_state (active_ws) & XFW_WORKSPACE_STATE_VIRTUAL)
+        {
+          /* Viewport mode (compiz) */
+          guint          scale_factor;
+          GdkRectangle  *rect;
+          GdkScreen *screen = gdk_screen_get_default ();
+          int viewport_x;
+          int viewport_y;
+          int screen_width;
+          int workspace_width;
+          int scroll_direction;
+
+          scale_factor = gdk_window_get_scale_factor (gtk_widget_get_window (GTK_WIDGET (plugin)));
+          rect = xfw_workspace_get_geometry (active_ws);
+
+          /* Total workspacesize, e.g. 5120x1024 (5120=4x1280) */
+          /* Only width is needed, virtual workspaces are stacked */
+          /* horizontally. */
+          workspace_width = rect->width;
+          /* Current screensize, e.g. 1280x1024 */
+          screen_width = panel_screen_get_width (screen) * scale_factor;
+          /* Current viewportcoordinates, e.g. 0,0 or 1280,0 */
+          viewport_x = rect->x;
+          viewport_y = rect->y;
+
+          if (scrolling_direction == GDK_SCROLL_UP
+            || scrolling_direction == GDK_SCROLL_LEFT)
+            scroll_direction = -1;
+          else
+            scroll_direction = 1;
+
+          /* Viewportscroll is only in x-direction */
+          viewport_x = viewport_x + (scroll_direction * screen_width);
+
+          if (plugin->wrap_workspaces)
+            {
+              /* Wrap if needed */
+              if (viewport_x > workspace_width)
+                viewport_x = 0;
+              if (viewport_x < 0)
+                viewport_x = workspace_width - screen_width;
+            }
+          else if (viewport_x < 0 || viewport_x >= workspace_width)
+            {
+              /* Wrap disabled, no need to do anything */
+              return TRUE;
+            }
+
+          xfw_workspace_group_move_viewport (plugin->workspace_group,
+                                         viewport_x, viewport_y, NULL);
+        }
+      else
+        {
+          /* Only one workspace, no need to do anything */
+          return TRUE;
+        }
     }
-  else if (active_n < 0 || active_n > n_workspaces)
+  else
     {
-      /* we do not need to do anything */
-      return TRUE;
-    }
+      /* Real workspaces */
+      if (scrolling_direction == GDK_SCROLL_UP
+        || scrolling_direction == GDK_SCROLL_LEFT)
+        active_n--;
+      else
+        active_n++;
+
+      if (plugin->wrap_workspaces)
+        {
+          /* Wrap around */
+          if (active_n < 0)
+            active_n = n_workspaces;
+          else if (active_n > n_workspaces)
+            active_n = 0;
+        }
+      else if (active_n < 0 || active_n > n_workspaces )
+        {
+          /* We do not need to do anything */
+          return TRUE;
+        }
 
-  new_ws = g_list_nth_data (xfw_workspace_group_list_workspaces (plugin->workspace_group), active_n);
-  if (new_ws != NULL && active_ws != new_ws)
-    xfw_workspace_activate (new_ws, NULL);
+      new_ws = g_list_nth_data (xfw_workspace_group_list_workspaces (plugin->workspace_group), active_n);
+      if (new_ws != NULL && active_ws != new_ws)
+        xfw_workspace_activate (new_ws, NULL);
+    }
 
   return TRUE;
 }
