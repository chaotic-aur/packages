# Maintainer: aur.chaotic.cx

## options
: ${_use_clang:=false}

: ${_build_qt:=true}
: ${_build_sdl:=true}

_pkgname="shadps4"
pkgname="$_pkgname-git"
pkgver=0.11.0.r60.g109b239
pkgrel=1
pkgdesc="PlayStation 4 emulator"
url="https://github.com/shadps4-emu/shadPS4"
license=('GPL-2.0-or-later')
arch=('x86_64')

depends=(
  'glslang'
  'libavcodec.so'    # ffmpeg
  'libavformat.so'   # ffmpeg
  'libavutil.so'     # ffmpeg
  'libfmt.so'        # fmt
  'libpng16.so'      # libpng
  'libswresample.so' # ffmpeg
  'libswscale.so'    # ffmpeg
  'libudev.so'       # systemd-libs
  'libuuid.so'       # util-linux-libs
  'libxxhash.so'     # xxhash
  'libz.so'          # zlib
  'pugixml'
  'qt6-multimedia'
  'sdl3'
)
makedepends=(
  'boost'
  'cmake'
  'git'
  'half'
  'ninja'
  'qt6-tools'
  'rapidjson'
  'robin-map'
  'spirv-headers'
  'stb'
  'toml11'
)

if [[ "${_use_clang::1}" == "t" ]]; then
  makedepends+=(
    'clang'
    'lld'
  )
fi

options=('!lto')

provides=("$_pkgname")
conflicts=("$_pkgname")

_pkgsrc="$_pkgname"
source=(
  "$_pkgsrc"::"git+$url.git"
  "0001-PR3719-fix-fmt-12.patch"::"https://github.com/shadps4-emu/shadPS4/pull/3719.diff"
)
sha256sums=(
  'SKIP'
  'e9185f253805876458f33c6485e7330957746916dbef187ce60e8fbaacf3606f'
)

prepare() {
  cd "$_pkgsrc"
  git rm -r externals/MoltenVK/MoltenVK
  git rm -r externals/MoltenVK/SPIRV-Cross
  git rm -r externals/MoltenVK/cereal
  git rm -r externals/date
  git rm -r externals/ext-boost
  git rm -r externals/ffmpeg-core
  git rm -r externals/fmt
  git rm -r externals/glslang
  git rm -r externals/half
  git rm -r externals/libpng
  git rm -r externals/pugixml
  git rm -r externals/robin-map
  git rm -r externals/sdl3
  git rm -r externals/toml11
  git rm -r externals/xxhash
  git rm -r externals/zlib-ng
  git submodule update --init --recursive --depth 1

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    src="${src%.zst}"
    if [[ $src == *.patch ]]; then
      printf '\nApplying patch: %s\n' "$src"
      patch -Np1 -F100 -i "${srcdir:?}/$src" || true
    fi
  done

  # respect system build flags
  sed -E -e '/march/d' -i CMakeLists.txt

  # set version info
  local _pkgver=$(cd "$srcdir" && pkgver)

  sed -E -e 's&@APP_IS_RELEASE@&true&' \
    -e 's&@APP_VERSION@&'"${_pkgver:?}&" \
    -i src/common/scm_rev.cpp.in

  sed -E -e 's&(fmt::format)\("shadPS4 v&\1("shadPS4 &' \
    -i src/emulator.cpp src/qt_gui/main_window.cpp

  # this is an unofficial build
  # hide links to prevent issue reports to upstream
  sed -E \
    -e '/^\s*preloadImages\(\);.*$/i     ui->image_1->setVisible(false);' \
    -e '/^\s*preloadImages\(\);.*$/i     ui->image_2->setVisible(false);' \
    -e '/^\s*preloadImages\(\);.*$/i     ui->image_3->setVisible(false);' \
    -e '/^\s*preloadImages\(\);.*$/i     ui->image_4->setVisible(false);' \
    -e '/^\s*preloadImages\(\);.*$/i     ui->image_5->setVisible(false);' \
    -e '/^\s*preloadImages\(\);.*$/d' \
    -i src/qt_gui/about_dialog.cpp
}

pkgver() {
  cd "$_pkgsrc"
  git describe --long --tags --abbrev=7 --exclude='*[a-zA-Z][a-zA-Z]*' \
    | sed -E 's/^[^0-9]*//;s/([^-]*-g)/r\1/;s/-/./g'
}

build() (
  if [[ "${_use_clang::1}" == "t" ]]; then
    export CC CXX LDFLAGS
    CC=clang
    CXX=clang++

    local _ldflags=(${LDFLAGS})
    LDFLAGS="${_ldflags[@]//*fuse-ld*/} -fuse-ld=lld"
  fi

  local _cmake_options=(
    -S "$_pkgsrc"
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX='/usr'
    -DCMAKE_SKIP_RPATH=ON
    -DENABLE_UPDATER=OFF
    -DSIRIT_USE_SYSTEM_SPIRV_HEADERS=ON
    -DBUILD_TESTING=OFF
    -Wno-dev
  )

  if [[ "${_build_qt::1}" == "t" ]]; then
    echo "Building Qt GUI..."
    local _cmake_qt=(
      -B build_qt
      -DENABLE_QT_GUI=ON
      "${_cmake_options[@]}"
    )

    cmake "${_cmake_qt[@]}"
    cmake --build build_qt
  fi

  if [[ "${_build_sdl::1}" == "t" ]]; then
    echo "Building SDL CLI..."
    local _cmake_sdl=(
      -B build_sdl
      -DENABLE_QT_GUI=OFF
      "${_cmake_options[@]}"
    )

    cmake "${_cmake_sdl[@]}"
    cmake --build build_sdl
  fi
)

package() {
  if [[ "${_build_qt::1}" == "t" ]]; then
    install -Dm755 build_qt/shadps4 "$pkgdir/usr/bin/$_pkgname"
  fi

  if [[ "${_build_sdl::1}" == "t" ]]; then
    install -Dm755 build_sdl/shadps4 "$pkgdir/usr/bin/${_pkgname}-sdl"
  fi

  install -Dm644 "$_pkgsrc/src/images/shadps4.svg" "$pkgdir/usr/share/pixmaps/$_pkgname.svg"

  install -Dm644 /dev/stdin "$pkgdir/usr/share/applications/$_pkgname.desktop" << END
[Desktop Entry]
Type=Application
Name=shadPS4
Comment=$pkgdesc
Exec=$_pkgname
Icon=$_pkgname
Terminal=false
Categories=Game;Emulator;
StartupWMClass=shadps4;
END
}
