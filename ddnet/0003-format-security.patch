--- ./src/engine/client/client.cpp.orig	2024-06-22 17:11:40.117804025 +0100
+++ ./src/engine/client/client.cpp	2024-06-22 17:11:46.890791852 +0100
@@ -3124,7 +3124,7 @@ bool CClient::InitNetworkClient(char *pE
 					if(g_Config.m_Bindaddr[0])
 						str_format(pError, ErrorSize, "Could not open the network client, try changing or unsetting the bindaddr '%s'.", g_Config.m_Bindaddr);
 					else
-						str_format(pError, ErrorSize, "Could not open the network client.");
+						str_format(pError, ErrorSize, "Could not open the network client.", "");
 					return false;
 				}
 			}
--- ./src/game/client/components/menus_settings.cpp.orig	2024-06-14 05:30:46.000000000 +0100
+++ ./src/game/client/components/menus_settings.cpp	2024-06-22 21:20:46.054704973 +0100
@@ -3418,15 +3418,15 @@ void CMenus::RenderSettingsDDNet(CUIRect
 			}
 		}
 		else if(State >= IUpdater::GETTING_MANIFEST && State < IUpdater::NEED_RESTART)
-			str_format(aBuf, sizeof(aBuf), Localize("Updating…"));
+			str_format(aBuf, sizeof(aBuf), Localize("Updating…"), "");
 		else if(State == IUpdater::NEED_RESTART)
 		{
-			str_format(aBuf, sizeof(aBuf), Localize("DDNet Client updated!"));
+			str_format(aBuf, sizeof(aBuf), Localize("DDNet Client updated!"), "");
 			m_NeedRestartUpdate = true;
 		}
 		else
 		{
-			str_format(aBuf, sizeof(aBuf), Localize("No updates available"));
+			str_format(aBuf, sizeof(aBuf), Localize("No updates available"), "");
 			UpdaterRect.VSplitLeft(TextRender()->TextWidth(14.0f, aBuf, -1, -1.0f) + 10.0f, &UpdaterRect, &Button);
 			Button.VSplitLeft(100.0f, &Button, nullptr);
 			static CButtonContainer s_ButtonUpdate;
--- ./src/game/editor/editor_actions.cpp.orig	2024-06-22 17:40:28.775696370 +0100
+++ ./src/game/editor/editor_actions.cpp	2024-06-22 21:23:47.440395282 +0100
@@ -320,7 +320,7 @@ void CEditorActionDeleteQuad::Redo()
 CEditorActionEditQuadPoint::CEditorActionEditQuadPoint(CEditor *pEditor, int GroupIndex, int LayerIndex, int QuadIndex, std::vector<CPoint> const &vPreviousPoints, std::vector<CPoint> const &vCurrentPoints) :
 	CEditorActionLayerBase(pEditor, GroupIndex, LayerIndex), m_QuadIndex(QuadIndex), m_vPreviousPoints(vPreviousPoints), m_vCurrentPoints(vCurrentPoints)
 {
-	str_format(m_aDisplayText, sizeof(m_aDisplayText), "Edit quad points");
+	str_format(m_aDisplayText, sizeof(m_aDisplayText), "Edit quad points", "");
 }
 
 void CEditorActionEditQuadPoint::Undo()
@@ -628,7 +628,7 @@ CEditorActionGroup::CEditorActionGroup(C
 	if(m_Delete)
 		str_format(m_aDisplayText, sizeof(m_aDisplayText), "Delete group %d", m_GroupIndex);
 	else
-		str_format(m_aDisplayText, sizeof(m_aDisplayText), "New group");
+		str_format(m_aDisplayText, sizeof(m_aDisplayText), "New group", "");
 }
 
 void CEditorActionGroup::Undo()
@@ -1198,7 +1198,7 @@ CEditorActionTileArt::CEditorActionTileA
 	IEditorAction(pEditor), m_PreviousImageCount(PreviousImageCount), m_vImageIndexMap(vImageIndexMap)
 {
 	str_copy(m_aTileArtFile, pTileArtFile);
-	str_format(m_aDisplayText, sizeof(m_aDisplayText), "Tile art");
+	str_format(m_aDisplayText, sizeof(m_aDisplayText), "Tile art", "");
 }
 
 void CEditorActionTileArt::Undo()
@@ -1266,7 +1266,7 @@ CEditorCommandAction::CEditorCommandActi
 	switch(m_Type)
 	{
 	case EType::ADD:
-		str_format(m_aDisplayText, sizeof(m_aDisplayText), "Add command");
+		str_format(m_aDisplayText, sizeof(m_aDisplayText), "Add command", "");
 		break;
 	case EType::EDIT:
 		str_format(m_aDisplayText, sizeof(m_aDisplayText), "Edit command %d", m_CommandIndex);
--- ./src/game/client/components/menus_start.cpp.orig	2024-06-22 21:28:03.483958586 +0100
+++ ./src/game/client/components/menus_start.cpp	2024-06-22 21:29:54.126769996 +0100
@@ -225,12 +225,12 @@ void CMenus::RenderStartMenu(CUIRect Mai
 	}
 	else if(State == IUpdater::FAIL)
 	{
-		str_format(aBuf, sizeof(aBuf), Localize("Update failed! Check log…"));
+		str_format(aBuf, sizeof(aBuf), Localize("Update failed! Check log…"), "");
 		TextRender()->TextColor(1.0f, 0.4f, 0.4f, 1.0f);
 	}
 	else if(State == IUpdater::NEED_RESTART)
 	{
-		str_format(aBuf, sizeof(aBuf), Localize("DDNet Client updated!"));
+		str_format(aBuf, sizeof(aBuf), Localize("DDNet Client updated!"), "");
 		TextRender()->TextColor(1.0f, 0.4f, 0.4f, 1.0f);
 	}
 	Ui()->DoLabel(&VersionUpdate, aBuf, 14.0f, TEXTALIGN_ML);
--- ./src/game/client/components/hud.cpp.orig	2024-06-22 23:00:01.687286685 +0100
+++ ./src/game/client/components/hud.cpp	2024-06-22 23:02:23.625031148 +0100
@@ -1620,7 +1620,7 @@ void CHud::RenderRecord()
 	if(m_ServerRecord > 0.0f)
 	{
 		char aBuf[64];
-		str_format(aBuf, sizeof(aBuf), Localize("Server best:"));
+		str_format(aBuf, sizeof(aBuf), Localize("Server best:"), "");
 		TextRender()->Text(5, 75, 6, aBuf, -1.0f);
 		char aTime[32];
 		str_time_float(m_ServerRecord, TIME_HOURS_CENTISECS, aTime, sizeof(aTime));
@@ -1632,7 +1632,7 @@ void CHud::RenderRecord()
 	if(PlayerRecord > 0.0f)
 	{
 		char aBuf[64];
-		str_format(aBuf, sizeof(aBuf), Localize("Personal best:"));
+		str_format(aBuf, sizeof(aBuf), Localize("Personal best:"), "");
 		TextRender()->Text(5, 82, 6, aBuf, -1.0f);
 		char aTime[32];
 		str_time_float(PlayerRecord, TIME_HOURS_CENTISECS, aTime, sizeof(aTime));
