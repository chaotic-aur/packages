# Maintainer: Runnytu < runnytu at gmail dot com >
# OldMaintainer: FreeK <stephan@confidr.me>
# Contributor: olav-st <olav.s.th@gmail.com>
# Contributor: David Manouchehri <manouchehri@riseup.net>

### BUILD OPTIONS
# Set to y to enable nomachine service autostart
_autoservice=n
# Set to y to enable firewall autorules
_autofirewall=n
### END BUILD OPTIONS

pkgname=nomachine
pkgver=8.13.1
_pkgvermain=8.13
_pkgrel_i686=1
_pkgrel_x86_64=1
_pkgrel_armv6h=1
_pkgrel_armv7h=1
_pkgrel_armv8h=1
_pkgrel_aarch64=${_pkgrel_armv8h}
_pkgrel_pentium4=${_pkgrel_i686}
pkgrel=1
pkgdesc="Remote desktop application"
groups=('network')
url="http://www.nomachine.com"
license=('custom:"NoMachine EULA"')
arch=('x86_64' 'i686' 'armv6h' 'armv7h' 'armv8h' 'aarch64' 'pentium4')
options=('!strip')
conflicts=('nxmanager' 'nxwebplayer' 'nxserver' 'nxnode' 'nxclient')
depends=('bash' 'openssh' 'nawk' 'polkit' 'rpm-tools' 'dkms')
optdepends=('xorg-xauth: allows logging into a headless machine')
sha512sums_x86_64=('6f6e6b1297ff3551d121978e46807b97f379829157d5878d4267b527e9369f7de402fe0d7827b2a8ec3c7e3d693a7bb6d6bb8dd9733e5f4bd4b2f30fae55cc30')
sha512sums_i686=('bca989b6116090d76c5279e7f6952b1042ba0a34d5bb1eed581668c4f248ac4856a3eac1b2e50aed5c0df4f3b911716f3b28cc863ba9e74922c68b390c76d7d0')
sha512sums_armv6h=('3993e6b1c2708e521c7aac7464be2e3d5c161f1a6807f507ae1e6159855dfbf652ef26340457e9873965cd85f1bf871a9f83c95f33717b01f9b80683f4fa7298')
sha512sums_armv7h=('6cfbd30838e40065244266fb71397e3ef9662a064c5da3a97abdf1f9bbae91e803591c41bd5fb09c7dec9e409a9a55fa5d14837491e630f0d9637fb4ba5de448')
sha512sums_armv8h=('77938cf21bfb29afb188acf56f3e6710ebf982729344fdef853d6ae28370636a5c4e18b99b5ca0748d741a6a42fcfeeb7502dea4895f002d383cd5005c834a00')
sha512sums_aarch64=('77938cf21bfb29afb188acf56f3e6710ebf982729344fdef853d6ae28370636a5c4e18b99b5ca0748d741a6a42fcfeeb7502dea4895f002d383cd5005c834a00')
sha512sums_pentium4=('bca989b6116090d76c5279e7f6952b1042ba0a34d5bb1eed581668c4f248ac4856a3eac1b2e50aed5c0df4f3b911716f3b28cc863ba9e74922c68b390c76d7d0')
source_x86_64=("http://download.nomachine.com/download/${_pkgvermain}/Linux/${pkgname}_${pkgver}_${_pkgrel_x86_64}_x86_64.tar.gz")
source_i686=("http://download.nomachine.com/download/${_pkgvermain}/Linux/${pkgname}_${pkgver}_${_pkgrel_i686}_i686.tar.gz")
source_armv6h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv6h}_armv6hl.tar.gz")
source_armv7h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv7h}_armv7hl.tar.gz")
source_armv8h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv8h}_aarch64.tar.gz")
source_aarch64=("${source_armv8h[@]}")
source_pentium4=("${source_i686[@]}")
install=nomachine.install

prepare() {
  #Fix Fedora Version Var And Libstdc++ Rename
  tar -zxf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz" NX/scripts/setup/nxrunner
  sed -i 's/    majorFedoraVersion.*/    majorFedoraVersion=23/' "$srcdir/NX/scripts/setup/nxrunner"
  tar -zxf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz" "NX/lib/"
  for _libstdc in "$srcdir/NX/lib/"libstdc++.*; do
    mv "${_libstdc}" ${_libstdc}.nomachine
  done
  gzip -d "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz"
  tar -rf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" NX/scripts/setup/nxrunner -C "$srcdir/NX/scripts/setup/nxrunner"
  tar --delete -f "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" "NX/lib/"
  tar -rf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" "NX/lib/" -C "$srcdir/NX/lib/"
  gzip "$srcdir/NX/etc/NX/server/packages/nxrunner.tar"
  rm -fr "$srcdir/NX/scripts"*
  rm -fr "$srcdir/NX/lib"*
  #Change Automatic Service Start And/Or Firewall Automatic Rules If Apply
  if [ $_autoservice = y ] && [ $_autofirewall = y ]; then
    echo "##################################################################"
    echo "#Enabling Automatic Service Start And Firewall Automatic Rules#"
    echo "##################################################################"
  elif [ $_autoservice = y ] && [ $_autofirewall = n ]; then
    echo "#####################################"
    echo "#Enabling Automatic Service Start#"
    echo "#####################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#EnableFirewallConfiguration 1/EnableFirewallConfiguration 0/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  elif [ $_autoservice = n ] && [ $_autofirewall = y ]; then
    echo "######################################"
    echo "#Enabling Firewall Automatic Rules#"
    echo "######################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#StartNXDaemon Automatic/StartNXDaemon Manual/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  elif [ $_autoservice = n ] && [ $_autofirewall = n ]; then
    echo "###################################################################"
    echo "#Disabling Automatic Service Start And Firewall Automatic Rules#"
    echo "###################################################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#EnableFirewallConfiguration 1/EnableFirewallConfiguration 0/' NX/etc/server-fedora.cfg.sample
    sed -i 's/#StartNXDaemon Automatic/StartNXDaemon Manual/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  fi
}

package() {
  cd "$srcdir"
  mkdir "$srcdir/NX/etc" -p
  install -d "$pkgdir/usr/"
  cp -a NX "$pkgdir/usr/NX"
}
