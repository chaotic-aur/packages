# Maintainer: Runnytu < runnytu at gmail dot com >
# OldMaintainer: FreeK <stephan@confidr.me>
# Contributor: olav-st <olav.s.th@gmail.com>
# Contributor: David Manouchehri <manouchehri@riseup.net>

### BUILD OPTIONS
# Set to y to enable nomachine service autostart
_autoservice=n
# Set to y to enable firewall autorules
_autofirewall=n
### END BUILD OPTIONS

pkgname=nomachine
pkgver=8.14.2
_pkgvermain=8.14
_pkgrel_i686=1
_pkgrel_x86_64=1
_pkgrel_armv6h=1
_pkgrel_armv7h=1
_pkgrel_armv8h=1
_pkgrel_aarch64=${_pkgrel_armv8h}
_pkgrel_pentium4=${_pkgrel_i686}
pkgrel=1
pkgdesc="Remote desktop application"
groups=('network')
url="http://www.nomachine.com"
license=('custom:"NoMachine EULA"')
arch=('x86_64' 'i686' 'armv6h' 'armv7h' 'armv8h' 'aarch64' 'pentium4')
options=('!strip')
conflicts=('nxmanager' 'nxwebplayer' 'nxserver' 'nxnode' 'nxclient')
depends=('bash' 'openssh' 'nawk' 'polkit' 'rpm-tools' 'dkms')
optdepends=('xorg-xauth: allows logging into a headless machine')
sha512sums_x86_64=('c3bf7e045b21811e9915d504a40a76214772393c3ac43944f62966337b739a80585217c93755509a4851528d47c34dfd796709a7090ffa8c69cc98148ef92988')
sha512sums_i686=('286e2927fcca9f74bf4dc9809192d08274b00058190e87ea3f69f6fdfa0d981ec07766d6a896141e840ab182ea4fbc296bdf30a0621bf1a0521b75a9837f9fbf')
sha512sums_armv6h=('1c1e70e9912d9b3e1c87bdaab5974072b0d3f49a9c1258ca0821441ebe92baf83c858242fe2f1c12b9f8daaba627ab59ee91bfd6baab9bd8da344052c9ac43d4')
sha512sums_armv7h=('5efaa4e87d371ca4c83eeaffeefcc7d3dff628995af80fbdebce68dfeace9a8ce395f5b4ef71784e2523bd755b6871078d21604d29188fea5ed99b063850d2dd')
sha512sums_armv8h=('ac8584028692974405fae69e46e55c625b46a43e1c054a690a04fedeeea7fbeb928eeecd54810c563132fc5fca15a75cdf1e8e512a4c29554839fe9e665eeda6')
sha512sums_aarch64=('ac8584028692974405fae69e46e55c625b46a43e1c054a690a04fedeeea7fbeb928eeecd54810c563132fc5fca15a75cdf1e8e512a4c29554839fe9e665eeda6')
sha512sums_pentium4=('286e2927fcca9f74bf4dc9809192d08274b00058190e87ea3f69f6fdfa0d981ec07766d6a896141e840ab182ea4fbc296bdf30a0621bf1a0521b75a9837f9fbf')
source_x86_64=("http://download.nomachine.com/download/${_pkgvermain}/Linux/${pkgname}_${pkgver}_${_pkgrel_x86_64}_x86_64.tar.gz")
source_i686=("http://download.nomachine.com/download/${_pkgvermain}/Linux/${pkgname}_${pkgver}_${_pkgrel_i686}_i686.tar.gz")
source_armv6h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv6h}_armv6hl.tar.gz")
source_armv7h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv7h}_armv7hl.tar.gz")
source_armv8h=("http://download.nomachine.com/download/${_pkgvermain}/Raspberry/${pkgname}_${pkgver}_${_pkgrel_armv8h}_aarch64.tar.gz")
source_aarch64=("${source_armv8h[@]}")
source_pentium4=("${source_i686[@]}")
install=nomachine.install

prepare() {
  #Fix Fedora Version Var And Libstdc++ Rename
  tar -zxf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz" NX/scripts/setup/nxrunner
  sed -i 's/    majorFedoraVersion.*/    majorFedoraVersion=23/' "$srcdir/NX/scripts/setup/nxrunner"
  tar -zxf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz" "NX/lib/"
  for _libstdc in "$srcdir/NX/lib/"libstdc++.*; do
    mv "${_libstdc}" ${_libstdc}.nomachine
  done
  gzip -d "$srcdir/NX/etc/NX/server/packages/nxrunner.tar.gz"
  tar -rf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" NX/scripts/setup/nxrunner -C "$srcdir/NX/scripts/setup/nxrunner"
  tar --delete -f "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" "NX/lib/"
  tar -rf "$srcdir/NX/etc/NX/server/packages/nxrunner.tar" "NX/lib/" -C "$srcdir/NX/lib/"
  gzip "$srcdir/NX/etc/NX/server/packages/nxrunner.tar"
  rm -fr "$srcdir/NX/scripts"*
  rm -fr "$srcdir/NX/lib"*
  #Change Automatic Service Start And/Or Firewall Automatic Rules If Apply
  if [ $_autoservice = y ] && [ $_autofirewall = y ]; then
    echo "##################################################################"
    echo "#Enabling Automatic Service Start And Firewall Automatic Rules#"
    echo "##################################################################"
  elif [ $_autoservice = y ] && [ $_autofirewall = n ]; then
    echo "#####################################"
    echo "#Enabling Automatic Service Start#"
    echo "#####################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#EnableFirewallConfiguration 1/EnableFirewallConfiguration 0/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  elif [ $_autoservice = n ] && [ $_autofirewall = y ]; then
    echo "######################################"
    echo "#Enabling Firewall Automatic Rules#"
    echo "######################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#StartNXDaemon Automatic/StartNXDaemon Manual/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  elif [ $_autoservice = n ] && [ $_autofirewall = n ]; then
    echo "###################################################################"
    echo "#Disabling Automatic Service Start And Firewall Automatic Rules#"
    echo "###################################################################"
    tar -zxf "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz" NX/etc/server-fedora.cfg.sample
    sed -i 's/#EnableFirewallConfiguration 1/EnableFirewallConfiguration 0/' NX/etc/server-fedora.cfg.sample
    sed -i 's/#StartNXDaemon Automatic/StartNXDaemon Manual/' NX/etc/server-fedora.cfg.sample
    gzip -d "$srcdir/NX/etc/NX/server/packages/nxserver.tar.gz"
    tar -rf "$srcdir/NX/etc/NX/server/packages/nxserver.tar" NX/etc/server-fedora.cfg.sample -C "$srcdir/NX/etc/server-fedora.cfg.sample"
    gzip "$srcdir/NX/etc/NX/server/packages/nxserver.tar"
    rm -fr "$srcdir/NX/etc/server-fedora.cfg.sample"
  fi
}

package() {
  cd "$srcdir"
  mkdir "$srcdir/NX/etc" -p
  install -d "$pkgdir/usr/"
  cp -a NX "$pkgdir/usr/NX"
}
