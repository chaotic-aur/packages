# Maintainer: aur.chaotic.cx

_pkgname="pcsx2"
pkgname="$_pkgname-git"
pkgver=2.5.163.r0.ga72f78f
pkgrel=1
pkgdesc="PlayStation 2 emulator"
url="https://github.com/PCSX2/pcsx2"
license=('GPL-3.0-or-later')
arch=('x86_64')

depends=(
  kddockwidgets-qt6 # AUR
  libpcap
  libpng
  libpulse
  libwebp
  libxi
  libxrandr
  plutosvg # AUR
  plutovg  # AUR
  qt6-base
  sdl3
)
makedepends=(
  ## compiler
  clang
  lld
  llvm

  ## build
  cmake
  extra-cmake-modules
  git
  ninja

  ## pcsx2
  shaderc
  qt6-tools

  # patches
  7zip
)
optdepends=(
  'alsa-utils: Sound player for RetroAchievements'
  'gstreamer: Backup sound player for RetroAchievements'
)

provides=("$_pkgname")
conflicts=("$_pkgname")

options=('!debug' 'lto')
install="$_pkgname.install"

_pkgsrc="$_pkgname"
source=(
  "$_pkgsrc"::"git+$url.git"
  "pcsx2_patches"::"git+https://github.com/PCSX2/pcsx2_patches.git"
)
sha256sums=(
  'SKIP'
  'SKIP'
)

prepare() {
  _submodule_update() {
    local _module
    for _module in "${_submodules[@]}"; do
      git submodule init "${_module##*::}"
      git submodule set-url "${_module##*::}" "$srcdir/${_module%::*}"
      git -c protocol.file.allow=always submodule update "${_module##*::}"
    done
  }

  cd "$_pkgsrc"

  # prevent march=native
  sed -E -e 's@^(\s*)(add_compile_options\(.*march=native.*\))@\1message("skip: march=native")@' \
    -i "cmake/BuildParameters.cmake"

  # adjust data path
  sed -E -e '/CMAKE_INSTALL_FULL_DATADIR/s@/PCSX2\b@/'"${_pkgname}@" \
    -i "pcsx2/CMakeLists.txt" \
    "cmake/BuildParameters.cmake"
}

pkgver() {
  cd "$_pkgsrc"
  git describe --long --tags --abbrev=7 --exclude='*[a-zA-Z][a-zA-Z]*' \
    | sed -E 's/^[^0-9]*//;s/([^-]*-g)/r\1/;s/-/./g'
}

_build_pcsx2() (
  echo "Building pcsx2..."
  local _cmake_pcsx2

  _cmake_pcsx2+=(
    -S "$_pkgsrc"
    -B build_pcsx2
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX='/usr'
    -DDISABLE_ADVANCE_SIMD=ON
    -DENABLE_SETCAP=OFF
    -DENABLE_TESTS=OFF
    -DPACKAGE_MODE=ON
    -DUSE_ASAN=OFF
    -DUSE_BACKTRACE=OFF
    -DUSE_VULKAN=ON
    -DWAYLAND_API=ON
    -DX11_API=ON
    -Wno-dev
  )

  cmake "${_cmake_pcsx2[@]}"
  cmake --build build_pcsx2
)

_build_pcsx2_patches() (
  cd pcsx2_patches
  7z a -mx=9 -r ../patches.zip patches/.
)

build() (
  export CC CXX CFLAGS CXXFLAGS LDFLAGS
  CC=clang
  CXX=clang++

  local _ldflags=(${LDFLAGS})
  LDFLAGS="${_ldflags[@]//*fuse-ld*/} -fuse-ld=lld"

  _build_pcsx2
  _build_pcsx2_patches
)

package() {
  DESTDIR="$pkgdir" cmake --install build_pcsx2
  ln -srf "$pkgdir/usr/bin"/{pcsx2-qt,$_pkgname}

  install -Dm644 patches.zip -t "$pkgdir/usr/share/$_pkgname/resources/"

  install -Dm644 pcsx2/bin/resources/icons/AppIconLarge.png "$pkgdir/usr/share/pixmaps/$_pkgname.png"

  install -Dm755 /dev/stdin "$pkgdir/usr/share/applications/$_pkgname.desktop" << END
[Desktop Entry]
Type=Application
Name=PCSX2
GenericName=$pkgdesc
Comment=$pkgdesc
TryExec=$_pkgname
Exec=$_pkgname %f
Icon=$_pkgname
Terminal=false
StartupNotify=true
StartupWMClass=$_pkgname
Categories=Game;Emulator
END
}
