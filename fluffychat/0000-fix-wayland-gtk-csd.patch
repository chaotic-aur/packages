--- a/linux/my_application.cc
+++ b/linux/my_application.cc
@@ -20,36 +20,21 @@
   GtkWindow* window =
       GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));
 
-  // Use a header bar when running in GNOME as this is the common style used
-  // by applications and is the setup most users will be using (e.g. Ubuntu
-  // desktop).
-  // If running on X and not using GNOME then just use a traditional title bar
-  // in case the window manager does more exotic layout, e.g. tiling.
-  // If running on Wayland assume the header bar will work (may need changing
-  // if future cases occur).
-  gboolean use_header_bar = TRUE;
-  // Lines added to the template start
-  // Please re-add these lines after updating the linux build files
-  // If the user explicitly requests to disable the header bar, switch back to 
-  // using a traditional title bar
+  // Do not use csd header bar unless using GNOME
+  gboolean use_header_bar = FALSE;
+
+  const gchar *desktop = g_getenv("XDG_CURRENT_DESKTOP");
+  if (desktop != nullptr && g_strrstr(desktop, "GNOME") != nullptr) {
+    g_setenv("GTK_CSD", "1", TRUE);
+  } else {
+    g_setenv("GTK_CSD", "0", TRUE);
+  }
+
   const gchar* gtk_csd_env = g_getenv("GTK_CSD");
-  if (gtk_csd_env != nullptr && g_strcmp0(gtk_csd_env, "1") != 0)
-    use_header_bar = FALSE;
-  // Lines added to the template end
-#ifdef GDK_WINDOWING_X11
-  GdkScreen* screen = gtk_window_get_screen(window);
-  if (GDK_IS_X11_SCREEN(screen)) {
-    const gchar* wm_name = gdk_x11_screen_get_window_manager_name(screen);
-    if (g_strcmp0(wm_name, "GNOME Shell") != 0) {
-      use_header_bar = FALSE;
-      // Lines added to the template start
-      // Please re-add these lines after updating the linux build files
-      // Disable libhandy here, otherwise the close button disappears on KDE X11
-      g_setenv("GTK_CSD", "0", TRUE);
-      // Lines added to the template end
-    }
+  if (gtk_csd_env != nullptr && g_strcmp0(gtk_csd_env, "1") == 0) {
+    use_header_bar = TRUE;
   }
-#endif
+
   if (use_header_bar) {
     GtkHeaderBar* header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
     gtk_widget_show(GTK_WIDGET(header_bar));
