# Maintainer: Vladimir Panteleev <arch-pkg at thecybershadow.net>

# Note: this PKGBUILD is a little more complicated than it could be,
# because we try to be strictly pedantic about separating the download
# phase from the build phase to conform to PKGBUILD ideals.
#
# Namely, all PKGBUILDs should ideally be written such that:
#
# - The download phase is done by the package build tool
#   (i.e. everything and anything that needs to be obtained from the
#   Internet is listed in the source array).
#
# - The download phase does not run any external code.
#
# - The build phase does not access the Internet.
#
# Satisfying these constraints allows users to configure the download
# mechanisms to e.g. use proxies and provides security and
# reproducibility guarantees.
#
# If you are packaging btdu and don't care about the above, you can
# skip all the "dub add-local ..." commands and simply run "dub build
# -b release", as documented in btdu's README.

pkgname=btdu
pkgver=0.6.0
pkgrel=1
pkgdesc='sampling disk usage profiler for btrfs'
arch=('aarch64' 'i686' 'x86_64')
url='https://github.com/CyberShadow/btdu'
license=('GPL2')
depends=('ncurses' 'd-runtime')
_d_compiler_spec='d-compiler>=2.97.0'
makedepends=("$_d_compiler_spec" 'dub' 'dtools')

# These should match dub.selections.json from the btdu repository:
_d_ae_ver=0.0.3461
_d_btrfs_ver=0.0.21
_d_ncurses_ver=1.0.0
_d_emsi_containers_ver=0.9.0

source=(${pkgname}-${pkgver}.tar.gz::https://github.com/CyberShadow/${pkgname}/archive/v${pkgver}.tar.gz
  ae-${_d_ae_ver}.tar.gz::https://github.com/CyberShadow/ae/archive/v${_d_ae_ver}.tar.gz
  d-btrfs-${_d_btrfs_ver}.tar.gz::https://github.com/CyberShadow/d-btrfs/archive/v${_d_btrfs_ver}.tar.gz
  ncurses-${_d_ncurses_ver}.tar.gz::https://github.com/D-Programming-Deimos/ncurses/archive/v${_d_ncurses_ver}.tar.gz
  emsi_containers-${_d_emsi_containers_ver}.tar.gz::https://github.com/dlang-community/containers/archive/v${_d_emsi_containers_ver}.tar.gz
)
sha256sums=('cbab7a250c8ba8d3ec6c49062ee7de4d0888e88e4959df349bc991aa9948e326'
  '8141af9830c30ad58933a022c4b8b84e3c1f476343abaa552cb2ce0fa72b537a'
  '343bef0cd60f4708fdab721a2aff003d0921267cc99ebfb778e93793433e3970'
  'b5db677b75ebef7a1365ca4ef768f7344a2bc8d07ec223a2ada162f185d0d9c6'
  '5e256b84bbdbd2bd625cba0472ea27a1fde6d673d37a85fe971a20d52874acaa')

prepare() {
  ln -sfT ae-${_d_ae_ver} "${srcdir}/ae" # directory name must be "ae" for --rdmd
  rm -rf "${srcdir}/_dub"
  cd "${srcdir}/${pkgname}-${pkgver}"
  HOME="${srcdir}/_dub" dub add-local ../ae ${_d_ae_ver}
  HOME="${srcdir}/_dub" dub add-local ../d-btrfs-${_d_btrfs_ver} ${_d_btrfs_ver}
  HOME="${srcdir}/_dub" dub add-local ../ncurses-${_d_ncurses_ver} ${_d_ncurses_ver}
  HOME="${srcdir}/_dub" dub add-local ../containers-${_d_emsi_containers_ver} ${_d_emsi_containers_ver}
}

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  # Ensure Dub doesn't try to use GDC
  local d_compiler
  d_compiler=$(pacman -Qq "$_d_compiler_spec")

  HOME="${srcdir}/_dub" dub --skip-registry=all build --compiler="$d_compiler" -b release --rdmd \
    ||
    # --rdmd creates smaller binaries
    HOME="${srcdir}/_dub" dub --skip-registry=all build --compiler="$d_compiler" -b release # retry without --rdmd - https://github.com/dlang/dub/pull/2033
}

package() {
  install -D -m755 "${srcdir}/${pkgname}-${pkgver}/${pkgname}" "${pkgdir}/usr/bin/${pkgname}"
  install -D "${srcdir}/${pkgname}-${pkgver}/${pkgname}.1" "${pkgdir}/usr/share/man/man1/${pkgname}.1"
}
