#!/usr/bin/env bash

_check_rate() {
  local _rate _date_build _epoch_build _epoch_now _epoch_diff

  _rate="$((3600 * ${1}))" # hours
  _date_build="$(LANG=C LC_ALL=C pacman -Si "chaotic-aur/gimp-git" | grep -Pom1 '^Build Date\s+:\s+\K\S.*\S$')"
  _epoch_build=$(\date '+%s' -d "$_date_build")
  _epoch_now=$(\date '+%s')
  _epoch_diff="$((_epoch_now - _epoch_build))"

  if [[ "$_epoch_diff" -lt "$_rate" ]]; then
    echo "Heavy package.  Skipping build."
    echo "> Last built $((_epoch_diff / 3600)) hours ago."
    return $CI_CODE_SKIP
  fi
}

_check_status() (
  local _url_repo _url_ci _commit _response _status _msg_err _success_ci
  _url_repo="https://gitlab.gnome.org/GNOME/gimp"
  _commit=$(git ls-remote "$_url_repo.git" HEAD 2>/dev/null | grep -m1 -oP '\w+(?=\t\w)')
  _url_ci="$_url_repo/-/commit/$_commit/pipelines.json"
  _response=$(curl -Ssf "$_url_ci")

  _status=$(grep -Eom1 '"details":{"status":{"icon":"[a-z_]+"' <<< "$_response")

  if grep -qo status_success <<< "$_status"; then
    _msg_err="Check-in status: Success."
    _success_ci=true
  elif grep -qo status_failed <<< "$_status"; then
    _msg_err="Check-in status: Failed."
    _success_ci=false
  elif grep -qo status_running <<< "$_status"; then
    _msg_err="Check-in status: Incomplete."
    _success_ci=false
  else
    _msg_err="Check-in status: Unknown."
    _success_ci=false
  fi

  echo "$_msg_err"
  echo "> $_url_ci"

  if [ "${_success_ci::1}" != "t" ]; then
    return "$CI_CODE_SKIP"
  fi
)

_check_bump() {
  local url pkgver pkgrel _pkgver

  eval "$(grep -Eo '^(url|pkgver|pkgrel)=\S+' PKGBUILD)"
  _pkgver=$(LANG=C LC_ALL=C pacman -Si chaotic-aur/gimp-git | grep -Pom1 '^Version\s+:\s+\K\S+')

  CI_PACKAGE_BUMP="$_pkgver"
  eval "$(grep -Eom1 '^CI_PACKAGE_BUMP=\S+$' .CI/config | sed 's&/&.&g')"

  if [ $(vercmp "${pkgver:-0}-${pkgrel:-0}" "$_pkgver") -gt 0 ]; then
    echo "New PKGBUILD.  ${pkgver}-${pkgrel} > $_pkgver"
  elif [ $(vercmp "$CI_PACKAGE_BUMP" "$_pkgver") -gt 0 ]; then
    echo "Bumped.  $CI_PACKAGE_BUMP >= $_pkgver"
  else
    return 2
  fi
}

_check_bump || _check_rate 18 || return $?
# _check_status || return $?
