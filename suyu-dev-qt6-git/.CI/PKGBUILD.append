pkgdesc="Nintendo Switch emulator"

depends=(${depends[@]//*fmt*/})
depends=(${depends[@]//*boost*/})
makedepends=(${makedepends[@]//*boost*/})

source=(${source[@]//*SDL*/})
source=(${source[@]//*ffmpeg*/})
source=(${source[@]//*vcpkg*/})

_source_boost() {
  _pkgver_boost="1.85.0"
  _pkgname_boost="boost_${_pkgver_boost//./_}"

  source+=("https://boostorg.jfrog.io/artifactory/main/release/$_pkgver_boost/source/$_pkgname_boost.tar.bz2")
  sha256sums+=('SKIP')
}

_source_fmt() {
  #_commit_fmt='a33701196adfad74917046096bf5a2aa0ab0bb50' # 9.1.0
  _commit_fmt='e69e5f977d458f2650bb346dadf2ad30c5320281' # 10.2.1

  source+=("fmtlib.fmt"::"git+https://github.com/fmtlib/fmt.git#commit=$_commit_fmt")
  sha256sums+=('SKIP')
}

_source_boost
_source_fmt

eval _orig_"$(declare -f prepare | sed -E -e 's&,SDL,&,&g;s&,ffmpeg,&,&g;s&,vcpkg,&,&g')"

prepare() {
  (
    cd "$srcdir/$_pkgname"
    git rm -r externals/SDL
    git rm -r externals/ffmpeg
    git rm -r externals/vcpkg
  )

  (_orig_prepare)
}

_build_boost() {
  echo "Building boost..."

  local JOBS="$(sed 's/.*\(-j *[0-9]\+\).*/\1/' <<< $MAKEFLAGS)"
  local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')

  pushd "$_pkgname_boost/tools/build"
  ./bootstrap.sh --cxxflags="$CXXFLAGS $LDFLAGS"
  ./b2 install --prefix="$srcdir"/deps
  ln -s b2 "$srcdir"/deps/bin/bjam
  popd

  cd "$_pkgname_boost"
  ./bootstrap.sh --with-toolset=gcc --with-icu --with-python=python3

  # support for OpenMPI
  echo "using mpi ;" >> project-config.jam

  # boostbook is needed by quickbook
  install -dm755 "$srcdir"/deps/share/boostbook
  cp -a tools/boostbook/{xsl,dtd} "$srcdir"/deps/share/boostbook/

  # install to $srcdir/deps
  ./b2 install \
    variant=release \
    debug-symbols=off \
    threading=multi \
    runtime-link=static \
    link=static \
    toolset=gcc \
    python=$python_version \
    cflags="$CPPFLAGS $CFLAGS -fPIC -O3 -ffat-lto-objects" \
    cxxflags="$CPPFLAGS $CXXFLAGS -fPIC -O3 -ffat-lto-objects" \
    linkflags="$LDFLAGS" \
    --layout=system \
    $JOBS \
    \
    --prefix="$srcdir"/deps
}

_build_fmt() {
  echo "Building fmt..."

  local _cmake_options=(
    -B build_fmt
    -S "fmtlib.fmt"
    -G Ninja
    -DCMAKE_BUILD_TYPE=None
    -DCMAKE_INSTALL_PREFIX='/usr'
    -DFMT_CMAKE_DIR='lib/cmake/fmt'
    -DFMT_DOC=OFF
    -DFMT_INC_DIR='include/fmt'
    -DFMT_PKGCONFIG_DIR='lib/fmt/pkgconfig'
    -DBUILD_SHARED_LIBS=OFF
    -Wno-dev
  )

  cmake "${_cmake_options[@]}"
  cmake --build build_fmt
  DESTDIR="$srcdir/deps" cmake --install build_fmt
}

eval _orig_"$(declare -f build)"

build() {
  (_build_boost)
  (_build_fmt)
  (
    flags+=(
      -DBoost_INCLUDE_DIR="$srcdir/deps/include"
      -Dfmt_DIR="$srcdir/deps/usr/lib/cmake/fmt"
    )
    _orig_build
  )
}

unset b2sums
unset sha256sums
for i in "${source[@]}"; do
  sha256sums+=('SKIP')
done
